
ledsw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e5a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000e5a  00000ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000010bc  00000000  00000000  00000ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006e2  00000000  00000000  00001f90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e5       	ldi	r30, 0x5A	; 90
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 c4 06 	call	0xd88	; 0xd88 <main>
  7a:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_enumSetPinDirection>:
#include "DIO_config.h"
#include "DIO_private.h"
#include "DIO_interface.h"

DIO_enumstatus DIO_enumSetPinDirection(u8 copy_u8PORT,u8 copy_u8PIN,u8 copy_u8Direction)
{ 
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	28 97       	sbiw	r28, 0x08	; 8
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	8a 83       	std	Y+2, r24	; 0x02
  98:	6b 83       	std	Y+3, r22	; 0x03
  9a:	4c 83       	std	Y+4, r20	; 0x04

 DIO_enumstatus LOC_enumstatus=DIO_NOK;
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	89 83       	std	Y+1, r24	; 0x01
 
if(copy_u8PORT<=DIO_PORTD && copy_u8PIN<=DIO_PIN7 && copy_u8Direction<=DIO_PIN_OUTPUT)
  a0:	8a 81       	ldd	r24, Y+2	; 0x02
  a2:	84 30       	cpi	r24, 0x04	; 4
  a4:	08 f0       	brcs	.+2      	; 0xa8 <DIO_enumSetPinDirection+0x26>
  a6:	f3 c0       	rjmp	.+486    	; 0x28e <DIO_enumSetPinDirection+0x20c>
  a8:	8b 81       	ldd	r24, Y+3	; 0x03
  aa:	88 30       	cpi	r24, 0x08	; 8
  ac:	08 f0       	brcs	.+2      	; 0xb0 <DIO_enumSetPinDirection+0x2e>
  ae:	ef c0       	rjmp	.+478    	; 0x28e <DIO_enumSetPinDirection+0x20c>
  b0:	8c 81       	ldd	r24, Y+4	; 0x04
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	08 f0       	brcs	.+2      	; 0xb8 <DIO_enumSetPinDirection+0x36>
  b6:	eb c0       	rjmp	.+470    	; 0x28e <DIO_enumSetPinDirection+0x20c>
{
	if(copy_u8Direction==DIO_PIN_OUTPUT)
  b8:	8c 81       	ldd	r24, Y+4	; 0x04
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	09 f0       	breq	.+2      	; 0xc0 <DIO_enumSetPinDirection+0x3e>
  be:	6f c0       	rjmp	.+222    	; 0x19e <DIO_enumSetPinDirection+0x11c>
	{
		switch(copy_u8PORT)
  c0:	8a 81       	ldd	r24, Y+2	; 0x02
  c2:	28 2f       	mov	r18, r24
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	38 87       	std	Y+8, r19	; 0x08
  c8:	2f 83       	std	Y+7, r18	; 0x07
  ca:	8f 81       	ldd	r24, Y+7	; 0x07
  cc:	98 85       	ldd	r25, Y+8	; 0x08
  ce:	81 30       	cpi	r24, 0x01	; 1
  d0:	91 05       	cpc	r25, r1
  d2:	49 f1       	breq	.+82     	; 0x126 <DIO_enumSetPinDirection+0xa4>
  d4:	2f 81       	ldd	r18, Y+7	; 0x07
  d6:	38 85       	ldd	r19, Y+8	; 0x08
  d8:	22 30       	cpi	r18, 0x02	; 2
  da:	31 05       	cpc	r19, r1
  dc:	2c f4       	brge	.+10     	; 0xe8 <DIO_enumSetPinDirection+0x66>
  de:	8f 81       	ldd	r24, Y+7	; 0x07
  e0:	98 85       	ldd	r25, Y+8	; 0x08
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	61 f0       	breq	.+24     	; 0xfe <DIO_enumSetPinDirection+0x7c>
  e6:	d2 c0       	rjmp	.+420    	; 0x28c <DIO_enumSetPinDirection+0x20a>
  e8:	2f 81       	ldd	r18, Y+7	; 0x07
  ea:	38 85       	ldd	r19, Y+8	; 0x08
  ec:	22 30       	cpi	r18, 0x02	; 2
  ee:	31 05       	cpc	r19, r1
  f0:	71 f1       	breq	.+92     	; 0x14e <DIO_enumSetPinDirection+0xcc>
  f2:	8f 81       	ldd	r24, Y+7	; 0x07
  f4:	98 85       	ldd	r25, Y+8	; 0x08
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	e9 f1       	breq	.+122    	; 0x176 <DIO_enumSetPinDirection+0xf4>
  fc:	c7 c0       	rjmp	.+398    	; 0x28c <DIO_enumSetPinDirection+0x20a>
		{
			case DIO_PORTA :SET_BIT(DDRA,copy_u8PIN); break;
  fe:	aa e3       	ldi	r26, 0x3A	; 58
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	ea e3       	ldi	r30, 0x3A	; 58
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	48 2f       	mov	r20, r24
 10a:	8b 81       	ldd	r24, Y+3	; 0x03
 10c:	28 2f       	mov	r18, r24
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 2e       	mov	r0, r18
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_enumSetPinDirection+0x9a>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	0a 94       	dec	r0
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_enumSetPinDirection+0x96>
 120:	84 2b       	or	r24, r20
 122:	8c 93       	st	X, r24
 124:	b3 c0       	rjmp	.+358    	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB :SET_BIT(DDRB,copy_u8PIN); break;
 126:	a7 e3       	ldi	r26, 0x37	; 55
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	e7 e3       	ldi	r30, 0x37	; 55
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	48 2f       	mov	r20, r24
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	28 2f       	mov	r18, r24
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 2e       	mov	r0, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_enumSetPinDirection+0xc2>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	0a 94       	dec	r0
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_enumSetPinDirection+0xbe>
 148:	84 2b       	or	r24, r20
 14a:	8c 93       	st	X, r24
 14c:	9f c0       	rjmp	.+318    	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC :SET_BIT(DDRC,copy_u8PIN); break;
 14e:	a4 e3       	ldi	r26, 0x34	; 52
 150:	b0 e0       	ldi	r27, 0x00	; 0
 152:	e4 e3       	ldi	r30, 0x34	; 52
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	48 2f       	mov	r20, r24
 15a:	8b 81       	ldd	r24, Y+3	; 0x03
 15c:	28 2f       	mov	r18, r24
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 2e       	mov	r0, r18
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_enumSetPinDirection+0xea>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	0a 94       	dec	r0
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_enumSetPinDirection+0xe6>
 170:	84 2b       	or	r24, r20
 172:	8c 93       	st	X, r24
 174:	8b c0       	rjmp	.+278    	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD :SET_BIT(DDRD,copy_u8PIN); break;
 176:	a1 e3       	ldi	r26, 0x31	; 49
 178:	b0 e0       	ldi	r27, 0x00	; 0
 17a:	e1 e3       	ldi	r30, 0x31	; 49
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	48 2f       	mov	r20, r24
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	28 2f       	mov	r18, r24
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 2e       	mov	r0, r18
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_enumSetPinDirection+0x112>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_enumSetPinDirection+0x10e>
 198:	84 2b       	or	r24, r20
 19a:	8c 93       	st	X, r24
 19c:	77 c0       	rjmp	.+238    	; 0x28c <DIO_enumSetPinDirection+0x20a>
		}
		
	}
	else if(copy_u8Direction==DIO_PIN_INPUT)
 19e:	8c 81       	ldd	r24, Y+4	; 0x04
 1a0:	88 23       	and	r24, r24
 1a2:	09 f0       	breq	.+2      	; 0x1a6 <DIO_enumSetPinDirection+0x124>
 1a4:	73 c0       	rjmp	.+230    	; 0x28c <DIO_enumSetPinDirection+0x20a>
	{
		switch(copy_u8PORT)
 1a6:	8a 81       	ldd	r24, Y+2	; 0x02
 1a8:	28 2f       	mov	r18, r24
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	3e 83       	std	Y+6, r19	; 0x06
 1ae:	2d 83       	std	Y+5, r18	; 0x05
 1b0:	8d 81       	ldd	r24, Y+5	; 0x05
 1b2:	9e 81       	ldd	r25, Y+6	; 0x06
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	91 05       	cpc	r25, r1
 1b8:	59 f1       	breq	.+86     	; 0x210 <DIO_enumSetPinDirection+0x18e>
 1ba:	2d 81       	ldd	r18, Y+5	; 0x05
 1bc:	3e 81       	ldd	r19, Y+6	; 0x06
 1be:	22 30       	cpi	r18, 0x02	; 2
 1c0:	31 05       	cpc	r19, r1
 1c2:	2c f4       	brge	.+10     	; 0x1ce <DIO_enumSetPinDirection+0x14c>
 1c4:	8d 81       	ldd	r24, Y+5	; 0x05
 1c6:	9e 81       	ldd	r25, Y+6	; 0x06
 1c8:	00 97       	sbiw	r24, 0x00	; 0
 1ca:	69 f0       	breq	.+26     	; 0x1e6 <DIO_enumSetPinDirection+0x164>
 1cc:	5f c0       	rjmp	.+190    	; 0x28c <DIO_enumSetPinDirection+0x20a>
 1ce:	2d 81       	ldd	r18, Y+5	; 0x05
 1d0:	3e 81       	ldd	r19, Y+6	; 0x06
 1d2:	22 30       	cpi	r18, 0x02	; 2
 1d4:	31 05       	cpc	r19, r1
 1d6:	89 f1       	breq	.+98     	; 0x23a <DIO_enumSetPinDirection+0x1b8>
 1d8:	8d 81       	ldd	r24, Y+5	; 0x05
 1da:	9e 81       	ldd	r25, Y+6	; 0x06
 1dc:	83 30       	cpi	r24, 0x03	; 3
 1de:	91 05       	cpc	r25, r1
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <DIO_enumSetPinDirection+0x162>
 1e2:	40 c0       	rjmp	.+128    	; 0x264 <DIO_enumSetPinDirection+0x1e2>
 1e4:	53 c0       	rjmp	.+166    	; 0x28c <DIO_enumSetPinDirection+0x20a>
		{
			case DIO_PORTA :CLR_BIT(DDRA,copy_u8PIN); break;
 1e6:	aa e3       	ldi	r26, 0x3A	; 58
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	ea e3       	ldi	r30, 0x3A	; 58
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	48 2f       	mov	r20, r24
 1f2:	8b 81       	ldd	r24, Y+3	; 0x03
 1f4:	28 2f       	mov	r18, r24
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 2e       	mov	r0, r18
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_enumSetPinDirection+0x182>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	0a 94       	dec	r0
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_enumSetPinDirection+0x17e>
 208:	80 95       	com	r24
 20a:	84 23       	and	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	3e c0       	rjmp	.+124    	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB :CLR_BIT(DDRB,copy_u8PIN); break;
 210:	a7 e3       	ldi	r26, 0x37	; 55
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e7 e3       	ldi	r30, 0x37	; 55
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8b 81       	ldd	r24, Y+3	; 0x03
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_enumSetPinDirection+0x1ac>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_enumSetPinDirection+0x1a8>
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	8c 93       	st	X, r24
 238:	29 c0       	rjmp	.+82     	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC :CLR_BIT(DDRC,copy_u8PIN); break;
 23a:	a4 e3       	ldi	r26, 0x34	; 52
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	e4 e3       	ldi	r30, 0x34	; 52
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	48 2f       	mov	r20, r24
 246:	8b 81       	ldd	r24, Y+3	; 0x03
 248:	28 2f       	mov	r18, r24
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 2e       	mov	r0, r18
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_enumSetPinDirection+0x1d6>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	0a 94       	dec	r0
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_enumSetPinDirection+0x1d2>
 25c:	80 95       	com	r24
 25e:	84 23       	and	r24, r20
 260:	8c 93       	st	X, r24
 262:	14 c0       	rjmp	.+40     	; 0x28c <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD :CLR_BIT(DDRD,copy_u8PIN); break;
 264:	a1 e3       	ldi	r26, 0x31	; 49
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	e1 e3       	ldi	r30, 0x31	; 49
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	48 2f       	mov	r20, r24
 270:	8b 81       	ldd	r24, Y+3	; 0x03
 272:	28 2f       	mov	r18, r24
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 2e       	mov	r0, r18
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_enumSetPinDirection+0x200>
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	0a 94       	dec	r0
 284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_enumSetPinDirection+0x1fc>
 286:	80 95       	com	r24
 288:	84 23       	and	r24, r20
 28a:	8c 93       	st	X, r24
		}
	} 
	LOC_enumstatus=DIO_OK;
 28c:	19 82       	std	Y+1, r1	; 0x01
}
return LOC_enumstatus;
 28e:	89 81       	ldd	r24, Y+1	; 0x01

}
 290:	28 96       	adiw	r28, 0x08	; 8
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
 29c:	cf 91       	pop	r28
 29e:	df 91       	pop	r29
 2a0:	08 95       	ret

000002a2 <DIO_enumSetPinValue>:
DIO_enumstatus DIO_enumSetPinValue    (u8 copy_u8PORT,u8 copy_u8PIN,u8 copy_u8Value    )
{
 2a2:	df 93       	push	r29
 2a4:	cf 93       	push	r28
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	28 97       	sbiw	r28, 0x08	; 8
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	8a 83       	std	Y+2, r24	; 0x02
 2b8:	6b 83       	std	Y+3, r22	; 0x03
 2ba:	4c 83       	std	Y+4, r20	; 0x04
	DIO_enumstatus LOC_enumstatus=DIO_NOK;
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PORT<=DIO_PORTD && copy_u8PIN<=DIO_PIN7 && copy_u8Value<=DIO_PIN_HIGH)
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	84 30       	cpi	r24, 0x04	; 4
 2c4:	08 f0       	brcs	.+2      	; 0x2c8 <DIO_enumSetPinValue+0x26>
 2c6:	f3 c0       	rjmp	.+486    	; 0x4ae <__stack+0x4f>
 2c8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ca:	88 30       	cpi	r24, 0x08	; 8
 2cc:	08 f0       	brcs	.+2      	; 0x2d0 <DIO_enumSetPinValue+0x2e>
 2ce:	ef c0       	rjmp	.+478    	; 0x4ae <__stack+0x4f>
 2d0:	8c 81       	ldd	r24, Y+4	; 0x04
 2d2:	82 30       	cpi	r24, 0x02	; 2
 2d4:	08 f0       	brcs	.+2      	; 0x2d8 <DIO_enumSetPinValue+0x36>
 2d6:	eb c0       	rjmp	.+470    	; 0x4ae <__stack+0x4f>
{
if(copy_u8Value==DIO_PIN_HIGH)
 2d8:	8c 81       	ldd	r24, Y+4	; 0x04
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	09 f0       	breq	.+2      	; 0x2e0 <DIO_enumSetPinValue+0x3e>
 2de:	6f c0       	rjmp	.+222    	; 0x3be <DIO_enumSetPinValue+0x11c>
	{
		switch(copy_u8PORT)
 2e0:	8a 81       	ldd	r24, Y+2	; 0x02
 2e2:	28 2f       	mov	r18, r24
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	38 87       	std	Y+8, r19	; 0x08
 2e8:	2f 83       	std	Y+7, r18	; 0x07
 2ea:	8f 81       	ldd	r24, Y+7	; 0x07
 2ec:	98 85       	ldd	r25, Y+8	; 0x08
 2ee:	81 30       	cpi	r24, 0x01	; 1
 2f0:	91 05       	cpc	r25, r1
 2f2:	49 f1       	breq	.+82     	; 0x346 <DIO_enumSetPinValue+0xa4>
 2f4:	2f 81       	ldd	r18, Y+7	; 0x07
 2f6:	38 85       	ldd	r19, Y+8	; 0x08
 2f8:	22 30       	cpi	r18, 0x02	; 2
 2fa:	31 05       	cpc	r19, r1
 2fc:	2c f4       	brge	.+10     	; 0x308 <DIO_enumSetPinValue+0x66>
 2fe:	8f 81       	ldd	r24, Y+7	; 0x07
 300:	98 85       	ldd	r25, Y+8	; 0x08
 302:	00 97       	sbiw	r24, 0x00	; 0
 304:	61 f0       	breq	.+24     	; 0x31e <DIO_enumSetPinValue+0x7c>
 306:	d2 c0       	rjmp	.+420    	; 0x4ac <__stack+0x4d>
 308:	2f 81       	ldd	r18, Y+7	; 0x07
 30a:	38 85       	ldd	r19, Y+8	; 0x08
 30c:	22 30       	cpi	r18, 0x02	; 2
 30e:	31 05       	cpc	r19, r1
 310:	71 f1       	breq	.+92     	; 0x36e <DIO_enumSetPinValue+0xcc>
 312:	8f 81       	ldd	r24, Y+7	; 0x07
 314:	98 85       	ldd	r25, Y+8	; 0x08
 316:	83 30       	cpi	r24, 0x03	; 3
 318:	91 05       	cpc	r25, r1
 31a:	e9 f1       	breq	.+122    	; 0x396 <DIO_enumSetPinValue+0xf4>
 31c:	c7 c0       	rjmp	.+398    	; 0x4ac <__stack+0x4d>
		{
			case DIO_PORTA :SET_BIT(PORTA,copy_u8PIN); break;
 31e:	ab e3       	ldi	r26, 0x3B	; 59
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	eb e3       	ldi	r30, 0x3B	; 59
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	48 2f       	mov	r20, r24
 32a:	8b 81       	ldd	r24, Y+3	; 0x03
 32c:	28 2f       	mov	r18, r24
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 2e       	mov	r0, r18
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_enumSetPinValue+0x9a>
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	0a 94       	dec	r0
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_enumSetPinValue+0x96>
 340:	84 2b       	or	r24, r20
 342:	8c 93       	st	X, r24
 344:	b3 c0       	rjmp	.+358    	; 0x4ac <__stack+0x4d>
			case DIO_PORTB :SET_BIT(PORTB,copy_u8PIN); break;
 346:	a8 e3       	ldi	r26, 0x38	; 56
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	e8 e3       	ldi	r30, 0x38	; 56
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	48 2f       	mov	r20, r24
 352:	8b 81       	ldd	r24, Y+3	; 0x03
 354:	28 2f       	mov	r18, r24
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	02 2e       	mov	r0, r18
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_enumSetPinValue+0xc2>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	0a 94       	dec	r0
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_enumSetPinValue+0xbe>
 368:	84 2b       	or	r24, r20
 36a:	8c 93       	st	X, r24
 36c:	9f c0       	rjmp	.+318    	; 0x4ac <__stack+0x4d>
			case DIO_PORTC :SET_BIT(PORTC,copy_u8PIN); break;
 36e:	a5 e3       	ldi	r26, 0x35	; 53
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	e5 e3       	ldi	r30, 0x35	; 53
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	48 2f       	mov	r20, r24
 37a:	8b 81       	ldd	r24, Y+3	; 0x03
 37c:	28 2f       	mov	r18, r24
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	02 2e       	mov	r0, r18
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_enumSetPinValue+0xea>
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	0a 94       	dec	r0
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_enumSetPinValue+0xe6>
 390:	84 2b       	or	r24, r20
 392:	8c 93       	st	X, r24
 394:	8b c0       	rjmp	.+278    	; 0x4ac <__stack+0x4d>
			case DIO_PORTD :SET_BIT(PORTD,copy_u8PIN); break;
 396:	a2 e3       	ldi	r26, 0x32	; 50
 398:	b0 e0       	ldi	r27, 0x00	; 0
 39a:	e2 e3       	ldi	r30, 0x32	; 50
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	80 81       	ld	r24, Z
 3a0:	48 2f       	mov	r20, r24
 3a2:	8b 81       	ldd	r24, Y+3	; 0x03
 3a4:	28 2f       	mov	r18, r24
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	02 2e       	mov	r0, r18
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_enumSetPinValue+0x112>
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	0a 94       	dec	r0
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_enumSetPinValue+0x10e>
 3b8:	84 2b       	or	r24, r20
 3ba:	8c 93       	st	X, r24
 3bc:	77 c0       	rjmp	.+238    	; 0x4ac <__stack+0x4d>
		}
		
	}
	else if(copy_u8Value==DIO_PIN_LOW)
 3be:	8c 81       	ldd	r24, Y+4	; 0x04
 3c0:	88 23       	and	r24, r24
 3c2:	09 f0       	breq	.+2      	; 0x3c6 <DIO_enumSetPinValue+0x124>
 3c4:	73 c0       	rjmp	.+230    	; 0x4ac <__stack+0x4d>
	{
		switch(copy_u8PORT)
 3c6:	8a 81       	ldd	r24, Y+2	; 0x02
 3c8:	28 2f       	mov	r18, r24
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	3e 83       	std	Y+6, r19	; 0x06
 3ce:	2d 83       	std	Y+5, r18	; 0x05
 3d0:	8d 81       	ldd	r24, Y+5	; 0x05
 3d2:	9e 81       	ldd	r25, Y+6	; 0x06
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	91 05       	cpc	r25, r1
 3d8:	59 f1       	breq	.+86     	; 0x430 <DIO_enumSetPinValue+0x18e>
 3da:	2d 81       	ldd	r18, Y+5	; 0x05
 3dc:	3e 81       	ldd	r19, Y+6	; 0x06
 3de:	22 30       	cpi	r18, 0x02	; 2
 3e0:	31 05       	cpc	r19, r1
 3e2:	2c f4       	brge	.+10     	; 0x3ee <DIO_enumSetPinValue+0x14c>
 3e4:	8d 81       	ldd	r24, Y+5	; 0x05
 3e6:	9e 81       	ldd	r25, Y+6	; 0x06
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	69 f0       	breq	.+26     	; 0x406 <DIO_enumSetPinValue+0x164>
 3ec:	5f c0       	rjmp	.+190    	; 0x4ac <__stack+0x4d>
 3ee:	2d 81       	ldd	r18, Y+5	; 0x05
 3f0:	3e 81       	ldd	r19, Y+6	; 0x06
 3f2:	22 30       	cpi	r18, 0x02	; 2
 3f4:	31 05       	cpc	r19, r1
 3f6:	89 f1       	breq	.+98     	; 0x45a <DIO_enumSetPinValue+0x1b8>
 3f8:	8d 81       	ldd	r24, Y+5	; 0x05
 3fa:	9e 81       	ldd	r25, Y+6	; 0x06
 3fc:	83 30       	cpi	r24, 0x03	; 3
 3fe:	91 05       	cpc	r25, r1
 400:	09 f4       	brne	.+2      	; 0x404 <DIO_enumSetPinValue+0x162>
 402:	40 c0       	rjmp	.+128    	; 0x484 <__stack+0x25>
 404:	53 c0       	rjmp	.+166    	; 0x4ac <__stack+0x4d>
		{
			case DIO_PORTA :CLR_BIT(PORTA,copy_u8PIN); break;
 406:	ab e3       	ldi	r26, 0x3B	; 59
 408:	b0 e0       	ldi	r27, 0x00	; 0
 40a:	eb e3       	ldi	r30, 0x3B	; 59
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	48 2f       	mov	r20, r24
 412:	8b 81       	ldd	r24, Y+3	; 0x03
 414:	28 2f       	mov	r18, r24
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	02 2e       	mov	r0, r18
 41e:	02 c0       	rjmp	.+4      	; 0x424 <DIO_enumSetPinValue+0x182>
 420:	88 0f       	add	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	0a 94       	dec	r0
 426:	e2 f7       	brpl	.-8      	; 0x420 <DIO_enumSetPinValue+0x17e>
 428:	80 95       	com	r24
 42a:	84 23       	and	r24, r20
 42c:	8c 93       	st	X, r24
 42e:	3e c0       	rjmp	.+124    	; 0x4ac <__stack+0x4d>
			case DIO_PORTB :CLR_BIT(PORTB,copy_u8PIN); break;
 430:	a8 e3       	ldi	r26, 0x38	; 56
 432:	b0 e0       	ldi	r27, 0x00	; 0
 434:	e8 e3       	ldi	r30, 0x38	; 56
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	48 2f       	mov	r20, r24
 43c:	8b 81       	ldd	r24, Y+3	; 0x03
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 2e       	mov	r0, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <DIO_enumSetPinValue+0x1ac>
 44a:	88 0f       	add	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	0a 94       	dec	r0
 450:	e2 f7       	brpl	.-8      	; 0x44a <DIO_enumSetPinValue+0x1a8>
 452:	80 95       	com	r24
 454:	84 23       	and	r24, r20
 456:	8c 93       	st	X, r24
 458:	29 c0       	rjmp	.+82     	; 0x4ac <__stack+0x4d>
			case DIO_PORTC :CLR_BIT(PORTC,copy_u8PIN); break;
 45a:	a5 e3       	ldi	r26, 0x35	; 53
 45c:	b0 e0       	ldi	r27, 0x00	; 0
 45e:	e5 e3       	ldi	r30, 0x35	; 53
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	80 81       	ld	r24, Z
 464:	48 2f       	mov	r20, r24
 466:	8b 81       	ldd	r24, Y+3	; 0x03
 468:	28 2f       	mov	r18, r24
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	02 2e       	mov	r0, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <__stack+0x19>
 474:	88 0f       	add	r24, r24
 476:	99 1f       	adc	r25, r25
 478:	0a 94       	dec	r0
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__stack+0x15>
 47c:	80 95       	com	r24
 47e:	84 23       	and	r24, r20
 480:	8c 93       	st	X, r24
 482:	14 c0       	rjmp	.+40     	; 0x4ac <__stack+0x4d>
			case DIO_PORTD :CLR_BIT(PORTD,copy_u8PIN); break;
 484:	a2 e3       	ldi	r26, 0x32	; 50
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e2 e3       	ldi	r30, 0x32	; 50
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	48 2f       	mov	r20, r24
 490:	8b 81       	ldd	r24, Y+3	; 0x03
 492:	28 2f       	mov	r18, r24
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 2e       	mov	r0, r18
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__stack+0x43>
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	0a 94       	dec	r0
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <__stack+0x3f>
 4a6:	80 95       	com	r24
 4a8:	84 23       	and	r24, r20
 4aa:	8c 93       	st	X, r24
		}
	}
	LOC_enumstatus=DIO_OK;
 4ac:	19 82       	std	Y+1, r1	; 0x01
}
return LOC_enumstatus;
 4ae:	89 81       	ldd	r24, Y+1	; 0x01
}
 4b0:	28 96       	adiw	r28, 0x08	; 8
 4b2:	0f b6       	in	r0, 0x3f	; 63
 4b4:	f8 94       	cli
 4b6:	de bf       	out	0x3e, r29	; 62
 4b8:	0f be       	out	0x3f, r0	; 63
 4ba:	cd bf       	out	0x3d, r28	; 61
 4bc:	cf 91       	pop	r28
 4be:	df 91       	pop	r29
 4c0:	08 95       	ret

000004c2 <DIO_enumGetPinValue>:


DIO_enumstatus   DIO_enumGetPinValue      (u8 copy_u8PORT,u8 copy_u8PIN,u8 *copy_u8Return )
{     
 4c2:	df 93       	push	r29
 4c4:	cf 93       	push	r28
 4c6:	cd b7       	in	r28, 0x3d	; 61
 4c8:	de b7       	in	r29, 0x3e	; 62
 4ca:	27 97       	sbiw	r28, 0x07	; 7
 4cc:	0f b6       	in	r0, 0x3f	; 63
 4ce:	f8 94       	cli
 4d0:	de bf       	out	0x3e, r29	; 62
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	cd bf       	out	0x3d, r28	; 61
 4d6:	8a 83       	std	Y+2, r24	; 0x02
 4d8:	6b 83       	std	Y+3, r22	; 0x03
 4da:	5d 83       	std	Y+5, r21	; 0x05
 4dc:	4c 83       	std	Y+4, r20	; 0x04
    DIO_enumstatus LOC_enumstatus=DIO_NOK;
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	89 83       	std	Y+1, r24	; 0x01

    if(copy_u8PORT<=DIO_PORTD && copy_u8PIN<=DIO_PIN7 && copy_u8Return!=NULL)
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	84 30       	cpi	r24, 0x04	; 4
 4e6:	08 f0       	brcs	.+2      	; 0x4ea <DIO_enumGetPinValue+0x28>
 4e8:	ab c0       	rjmp	.+342    	; 0x640 <DIO_enumGetPinValue+0x17e>
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	88 30       	cpi	r24, 0x08	; 8
 4ee:	08 f0       	brcs	.+2      	; 0x4f2 <DIO_enumGetPinValue+0x30>
 4f0:	a7 c0       	rjmp	.+334    	; 0x640 <DIO_enumGetPinValue+0x17e>
 4f2:	8c 81       	ldd	r24, Y+4	; 0x04
 4f4:	9d 81       	ldd	r25, Y+5	; 0x05
 4f6:	00 97       	sbiw	r24, 0x00	; 0
 4f8:	09 f4       	brne	.+2      	; 0x4fc <DIO_enumGetPinValue+0x3a>
 4fa:	a2 c0       	rjmp	.+324    	; 0x640 <DIO_enumGetPinValue+0x17e>
	{
	
	switch(copy_u8PORT)
 4fc:	8a 81       	ldd	r24, Y+2	; 0x02
 4fe:	28 2f       	mov	r18, r24
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	3f 83       	std	Y+7, r19	; 0x07
 504:	2e 83       	std	Y+6, r18	; 0x06
 506:	4e 81       	ldd	r20, Y+6	; 0x06
 508:	5f 81       	ldd	r21, Y+7	; 0x07
 50a:	41 30       	cpi	r20, 0x01	; 1
 50c:	51 05       	cpc	r21, r1
 50e:	c1 f1       	breq	.+112    	; 0x580 <DIO_enumGetPinValue+0xbe>
 510:	8e 81       	ldd	r24, Y+6	; 0x06
 512:	9f 81       	ldd	r25, Y+7	; 0x07
 514:	82 30       	cpi	r24, 0x02	; 2
 516:	91 05       	cpc	r25, r1
 518:	34 f4       	brge	.+12     	; 0x526 <DIO_enumGetPinValue+0x64>
 51a:	2e 81       	ldd	r18, Y+6	; 0x06
 51c:	3f 81       	ldd	r19, Y+7	; 0x07
 51e:	21 15       	cp	r18, r1
 520:	31 05       	cpc	r19, r1
 522:	71 f0       	breq	.+28     	; 0x540 <DIO_enumGetPinValue+0x7e>
 524:	8c c0       	rjmp	.+280    	; 0x63e <DIO_enumGetPinValue+0x17c>
 526:	4e 81       	ldd	r20, Y+6	; 0x06
 528:	5f 81       	ldd	r21, Y+7	; 0x07
 52a:	42 30       	cpi	r20, 0x02	; 2
 52c:	51 05       	cpc	r21, r1
 52e:	09 f4       	brne	.+2      	; 0x532 <DIO_enumGetPinValue+0x70>
 530:	47 c0       	rjmp	.+142    	; 0x5c0 <DIO_enumGetPinValue+0xfe>
 532:	8e 81       	ldd	r24, Y+6	; 0x06
 534:	9f 81       	ldd	r25, Y+7	; 0x07
 536:	83 30       	cpi	r24, 0x03	; 3
 538:	91 05       	cpc	r25, r1
 53a:	09 f4       	brne	.+2      	; 0x53e <DIO_enumGetPinValue+0x7c>
 53c:	61 c0       	rjmp	.+194    	; 0x600 <DIO_enumGetPinValue+0x13e>
 53e:	7f c0       	rjmp	.+254    	; 0x63e <DIO_enumGetPinValue+0x17c>
		{
			case DIO_PORTA :*copy_u8Return=GET_BIT(PORTA,copy_u8PIN); break;
 540:	eb e3       	ldi	r30, 0x3B	; 59
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	80 81       	ld	r24, Z
 546:	48 2f       	mov	r20, r24
 548:	50 e0       	ldi	r21, 0x00	; 0
 54a:	8b 81       	ldd	r24, Y+3	; 0x03
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_enumGetPinValue+0x98>
 556:	88 0f       	add	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	2a 95       	dec	r18
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_enumGetPinValue+0x94>
 55e:	9a 01       	movw	r18, r20
 560:	28 23       	and	r18, r24
 562:	39 23       	and	r19, r25
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	a9 01       	movw	r20, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_enumGetPinValue+0xb0>
 56e:	55 95       	asr	r21
 570:	47 95       	ror	r20
 572:	8a 95       	dec	r24
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_enumGetPinValue+0xac>
 576:	ca 01       	movw	r24, r20
 578:	ec 81       	ldd	r30, Y+4	; 0x04
 57a:	fd 81       	ldd	r31, Y+5	; 0x05
 57c:	80 83       	st	Z, r24
 57e:	5f c0       	rjmp	.+190    	; 0x63e <DIO_enumGetPinValue+0x17c>
			case DIO_PORTB :*copy_u8Return=GET_BIT(PORTB,copy_u8PIN); break;
 580:	e8 e3       	ldi	r30, 0x38	; 56
 582:	f0 e0       	ldi	r31, 0x00	; 0
 584:	80 81       	ld	r24, Z
 586:	48 2f       	mov	r20, r24
 588:	50 e0       	ldi	r21, 0x00	; 0
 58a:	8b 81       	ldd	r24, Y+3	; 0x03
 58c:	28 2f       	mov	r18, r24
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	02 c0       	rjmp	.+4      	; 0x59a <DIO_enumGetPinValue+0xd8>
 596:	88 0f       	add	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	2a 95       	dec	r18
 59c:	e2 f7       	brpl	.-8      	; 0x596 <DIO_enumGetPinValue+0xd4>
 59e:	9a 01       	movw	r18, r20
 5a0:	28 23       	and	r18, r24
 5a2:	39 23       	and	r19, r25
 5a4:	8b 81       	ldd	r24, Y+3	; 0x03
 5a6:	88 2f       	mov	r24, r24
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	a9 01       	movw	r20, r18
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <DIO_enumGetPinValue+0xf0>
 5ae:	55 95       	asr	r21
 5b0:	47 95       	ror	r20
 5b2:	8a 95       	dec	r24
 5b4:	e2 f7       	brpl	.-8      	; 0x5ae <DIO_enumGetPinValue+0xec>
 5b6:	ca 01       	movw	r24, r20
 5b8:	ec 81       	ldd	r30, Y+4	; 0x04
 5ba:	fd 81       	ldd	r31, Y+5	; 0x05
 5bc:	80 83       	st	Z, r24
 5be:	3f c0       	rjmp	.+126    	; 0x63e <DIO_enumGetPinValue+0x17c>
			case DIO_PORTC :*copy_u8Return=GET_BIT(PORTC,copy_u8PIN); break;
 5c0:	e5 e3       	ldi	r30, 0x35	; 53
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	80 81       	ld	r24, Z
 5c6:	48 2f       	mov	r20, r24
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	8b 81       	ldd	r24, Y+3	; 0x03
 5cc:	28 2f       	mov	r18, r24
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <DIO_enumGetPinValue+0x118>
 5d6:	88 0f       	add	r24, r24
 5d8:	99 1f       	adc	r25, r25
 5da:	2a 95       	dec	r18
 5dc:	e2 f7       	brpl	.-8      	; 0x5d6 <DIO_enumGetPinValue+0x114>
 5de:	9a 01       	movw	r18, r20
 5e0:	28 23       	and	r18, r24
 5e2:	39 23       	and	r19, r25
 5e4:	8b 81       	ldd	r24, Y+3	; 0x03
 5e6:	88 2f       	mov	r24, r24
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	a9 01       	movw	r20, r18
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <DIO_enumGetPinValue+0x130>
 5ee:	55 95       	asr	r21
 5f0:	47 95       	ror	r20
 5f2:	8a 95       	dec	r24
 5f4:	e2 f7       	brpl	.-8      	; 0x5ee <DIO_enumGetPinValue+0x12c>
 5f6:	ca 01       	movw	r24, r20
 5f8:	ec 81       	ldd	r30, Y+4	; 0x04
 5fa:	fd 81       	ldd	r31, Y+5	; 0x05
 5fc:	80 83       	st	Z, r24
 5fe:	1f c0       	rjmp	.+62     	; 0x63e <DIO_enumGetPinValue+0x17c>
			case DIO_PORTD :*copy_u8Return=GET_BIT(PORTD,copy_u8PIN); break;
 600:	e2 e3       	ldi	r30, 0x32	; 50
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	80 81       	ld	r24, Z
 606:	48 2f       	mov	r20, r24
 608:	50 e0       	ldi	r21, 0x00	; 0
 60a:	8b 81       	ldd	r24, Y+3	; 0x03
 60c:	28 2f       	mov	r18, r24
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_enumGetPinValue+0x158>
 616:	88 0f       	add	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	2a 95       	dec	r18
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_enumGetPinValue+0x154>
 61e:	9a 01       	movw	r18, r20
 620:	28 23       	and	r18, r24
 622:	39 23       	and	r19, r25
 624:	8b 81       	ldd	r24, Y+3	; 0x03
 626:	88 2f       	mov	r24, r24
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	a9 01       	movw	r20, r18
 62c:	02 c0       	rjmp	.+4      	; 0x632 <DIO_enumGetPinValue+0x170>
 62e:	55 95       	asr	r21
 630:	47 95       	ror	r20
 632:	8a 95       	dec	r24
 634:	e2 f7       	brpl	.-8      	; 0x62e <DIO_enumGetPinValue+0x16c>
 636:	ca 01       	movw	r24, r20
 638:	ec 81       	ldd	r30, Y+4	; 0x04
 63a:	fd 81       	ldd	r31, Y+5	; 0x05
 63c:	80 83       	st	Z, r24
		}
		LOC_enumstatus=DIO_OK;
 63e:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 640:	89 81       	ldd	r24, Y+1	; 0x01
}
 642:	27 96       	adiw	r28, 0x07	; 7
 644:	0f b6       	in	r0, 0x3f	; 63
 646:	f8 94       	cli
 648:	de bf       	out	0x3e, r29	; 62
 64a:	0f be       	out	0x3f, r0	; 63
 64c:	cd bf       	out	0x3d, r28	; 61
 64e:	cf 91       	pop	r28
 650:	df 91       	pop	r29
 652:	08 95       	ret

00000654 <DIO_enumTogglePin>:
DIO_enumstatus DIO_enumTogglePin       (u8 copy_u8PORT,u8 copy_u8PIN  )
{  
 654:	df 93       	push	r29
 656:	cf 93       	push	r28
 658:	00 d0       	rcall	.+0      	; 0x65a <DIO_enumTogglePin+0x6>
 65a:	00 d0       	rcall	.+0      	; 0x65c <DIO_enumTogglePin+0x8>
 65c:	0f 92       	push	r0
 65e:	cd b7       	in	r28, 0x3d	; 61
 660:	de b7       	in	r29, 0x3e	; 62
 662:	8a 83       	std	Y+2, r24	; 0x02
 664:	6b 83       	std	Y+3, r22	; 0x03
   
    DIO_enumstatus LOC_enumstatus=DIO_NOK;
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	89 83       	std	Y+1, r24	; 0x01

    if(copy_u8PORT<=DIO_PORTD && copy_u8PIN<=DIO_PIN7 )
 66a:	8a 81       	ldd	r24, Y+2	; 0x02
 66c:	84 30       	cpi	r24, 0x04	; 4
 66e:	08 f0       	brcs	.+2      	; 0x672 <DIO_enumTogglePin+0x1e>
 670:	73 c0       	rjmp	.+230    	; 0x758 <DIO_enumTogglePin+0x104>
 672:	8b 81       	ldd	r24, Y+3	; 0x03
 674:	88 30       	cpi	r24, 0x08	; 8
 676:	08 f0       	brcs	.+2      	; 0x67a <DIO_enumTogglePin+0x26>
 678:	6f c0       	rjmp	.+222    	; 0x758 <DIO_enumTogglePin+0x104>
	{
	switch(copy_u8PORT)
 67a:	8a 81       	ldd	r24, Y+2	; 0x02
 67c:	28 2f       	mov	r18, r24
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	3d 83       	std	Y+5, r19	; 0x05
 682:	2c 83       	std	Y+4, r18	; 0x04
 684:	8c 81       	ldd	r24, Y+4	; 0x04
 686:	9d 81       	ldd	r25, Y+5	; 0x05
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	91 05       	cpc	r25, r1
 68c:	49 f1       	breq	.+82     	; 0x6e0 <DIO_enumTogglePin+0x8c>
 68e:	2c 81       	ldd	r18, Y+4	; 0x04
 690:	3d 81       	ldd	r19, Y+5	; 0x05
 692:	22 30       	cpi	r18, 0x02	; 2
 694:	31 05       	cpc	r19, r1
 696:	2c f4       	brge	.+10     	; 0x6a2 <DIO_enumTogglePin+0x4e>
 698:	8c 81       	ldd	r24, Y+4	; 0x04
 69a:	9d 81       	ldd	r25, Y+5	; 0x05
 69c:	00 97       	sbiw	r24, 0x00	; 0
 69e:	61 f0       	breq	.+24     	; 0x6b8 <DIO_enumTogglePin+0x64>
 6a0:	5a c0       	rjmp	.+180    	; 0x756 <DIO_enumTogglePin+0x102>
 6a2:	2c 81       	ldd	r18, Y+4	; 0x04
 6a4:	3d 81       	ldd	r19, Y+5	; 0x05
 6a6:	22 30       	cpi	r18, 0x02	; 2
 6a8:	31 05       	cpc	r19, r1
 6aa:	71 f1       	breq	.+92     	; 0x708 <DIO_enumTogglePin+0xb4>
 6ac:	8c 81       	ldd	r24, Y+4	; 0x04
 6ae:	9d 81       	ldd	r25, Y+5	; 0x05
 6b0:	83 30       	cpi	r24, 0x03	; 3
 6b2:	91 05       	cpc	r25, r1
 6b4:	e9 f1       	breq	.+122    	; 0x730 <DIO_enumTogglePin+0xdc>
 6b6:	4f c0       	rjmp	.+158    	; 0x756 <DIO_enumTogglePin+0x102>
	{
	case DIO_PORTA : TOG_BIT(PORTA,copy_u8PIN); break;
 6b8:	ab e3       	ldi	r26, 0x3B	; 59
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	eb e3       	ldi	r30, 0x3B	; 59
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	80 81       	ld	r24, Z
 6c2:	48 2f       	mov	r20, r24
 6c4:	8b 81       	ldd	r24, Y+3	; 0x03
 6c6:	28 2f       	mov	r18, r24
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	81 e0       	ldi	r24, 0x01	; 1
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	02 2e       	mov	r0, r18
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_enumTogglePin+0x82>
 6d2:	88 0f       	add	r24, r24
 6d4:	99 1f       	adc	r25, r25
 6d6:	0a 94       	dec	r0
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_enumTogglePin+0x7e>
 6da:	84 27       	eor	r24, r20
 6dc:	8c 93       	st	X, r24
 6de:	3b c0       	rjmp	.+118    	; 0x756 <DIO_enumTogglePin+0x102>
	case DIO_PORTB : TOG_BIT(PORTB,copy_u8PIN); break;
 6e0:	a8 e3       	ldi	r26, 0x38	; 56
 6e2:	b0 e0       	ldi	r27, 0x00	; 0
 6e4:	e8 e3       	ldi	r30, 0x38	; 56
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	80 81       	ld	r24, Z
 6ea:	48 2f       	mov	r20, r24
 6ec:	8b 81       	ldd	r24, Y+3	; 0x03
 6ee:	28 2f       	mov	r18, r24
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	81 e0       	ldi	r24, 0x01	; 1
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	02 2e       	mov	r0, r18
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <DIO_enumTogglePin+0xaa>
 6fa:	88 0f       	add	r24, r24
 6fc:	99 1f       	adc	r25, r25
 6fe:	0a 94       	dec	r0
 700:	e2 f7       	brpl	.-8      	; 0x6fa <DIO_enumTogglePin+0xa6>
 702:	84 27       	eor	r24, r20
 704:	8c 93       	st	X, r24
 706:	27 c0       	rjmp	.+78     	; 0x756 <DIO_enumTogglePin+0x102>
	case DIO_PORTC : TOG_BIT(PORTC,copy_u8PIN); break;
 708:	a5 e3       	ldi	r26, 0x35	; 53
 70a:	b0 e0       	ldi	r27, 0x00	; 0
 70c:	e5 e3       	ldi	r30, 0x35	; 53
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	80 81       	ld	r24, Z
 712:	48 2f       	mov	r20, r24
 714:	8b 81       	ldd	r24, Y+3	; 0x03
 716:	28 2f       	mov	r18, r24
 718:	30 e0       	ldi	r19, 0x00	; 0
 71a:	81 e0       	ldi	r24, 0x01	; 1
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	02 2e       	mov	r0, r18
 720:	02 c0       	rjmp	.+4      	; 0x726 <DIO_enumTogglePin+0xd2>
 722:	88 0f       	add	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	0a 94       	dec	r0
 728:	e2 f7       	brpl	.-8      	; 0x722 <DIO_enumTogglePin+0xce>
 72a:	84 27       	eor	r24, r20
 72c:	8c 93       	st	X, r24
 72e:	13 c0       	rjmp	.+38     	; 0x756 <DIO_enumTogglePin+0x102>
	case DIO_PORTD : TOG_BIT(PORTD,copy_u8PIN); break;
 730:	a2 e3       	ldi	r26, 0x32	; 50
 732:	b0 e0       	ldi	r27, 0x00	; 0
 734:	e2 e3       	ldi	r30, 0x32	; 50
 736:	f0 e0       	ldi	r31, 0x00	; 0
 738:	80 81       	ld	r24, Z
 73a:	48 2f       	mov	r20, r24
 73c:	8b 81       	ldd	r24, Y+3	; 0x03
 73e:	28 2f       	mov	r18, r24
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	02 2e       	mov	r0, r18
 748:	02 c0       	rjmp	.+4      	; 0x74e <DIO_enumTogglePin+0xfa>
 74a:	88 0f       	add	r24, r24
 74c:	99 1f       	adc	r25, r25
 74e:	0a 94       	dec	r0
 750:	e2 f7       	brpl	.-8      	; 0x74a <DIO_enumTogglePin+0xf6>
 752:	84 27       	eor	r24, r20
 754:	8c 93       	st	X, r24
	}
	LOC_enumstatus=DIO_OK;
 756:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 758:	89 81       	ldd	r24, Y+1	; 0x01
}
 75a:	0f 90       	pop	r0
 75c:	0f 90       	pop	r0
 75e:	0f 90       	pop	r0
 760:	0f 90       	pop	r0
 762:	0f 90       	pop	r0
 764:	cf 91       	pop	r28
 766:	df 91       	pop	r29
 768:	08 95       	ret

0000076a <DIO_enumSetPortDirection>:
DIO_enumstatus DIO_enumSetPortDirection(u8 copy_u8PORT ,u8 copy_u8Direction                           )
{ 
 76a:	df 93       	push	r29
 76c:	cf 93       	push	r28
 76e:	00 d0       	rcall	.+0      	; 0x770 <DIO_enumSetPortDirection+0x6>
 770:	00 d0       	rcall	.+0      	; 0x772 <DIO_enumSetPortDirection+0x8>
 772:	0f 92       	push	r0
 774:	cd b7       	in	r28, 0x3d	; 61
 776:	de b7       	in	r29, 0x3e	; 62
 778:	8a 83       	std	Y+2, r24	; 0x02
 77a:	6b 83       	std	Y+3, r22	; 0x03
     DIO_enumstatus LOC_enumstatus=DIO_NOK;
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	89 83       	std	Y+1, r24	; 0x01

    if(copy_u8PORT<=DIO_PORTD && copy_u8Direction<=DIO_PORT_OUTPUT )
 780:	8a 81       	ldd	r24, Y+2	; 0x02
 782:	84 30       	cpi	r24, 0x04	; 4
 784:	98 f5       	brcc	.+102    	; 0x7ec <DIO_enumSetPortDirection+0x82>
	{
    
	switch(copy_u8PORT)
 786:	8a 81       	ldd	r24, Y+2	; 0x02
 788:	28 2f       	mov	r18, r24
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	3d 83       	std	Y+5, r19	; 0x05
 78e:	2c 83       	std	Y+4, r18	; 0x04
 790:	8c 81       	ldd	r24, Y+4	; 0x04
 792:	9d 81       	ldd	r25, Y+5	; 0x05
 794:	81 30       	cpi	r24, 0x01	; 1
 796:	91 05       	cpc	r25, r1
 798:	d1 f0       	breq	.+52     	; 0x7ce <DIO_enumSetPortDirection+0x64>
 79a:	2c 81       	ldd	r18, Y+4	; 0x04
 79c:	3d 81       	ldd	r19, Y+5	; 0x05
 79e:	22 30       	cpi	r18, 0x02	; 2
 7a0:	31 05       	cpc	r19, r1
 7a2:	2c f4       	brge	.+10     	; 0x7ae <DIO_enumSetPortDirection+0x44>
 7a4:	8c 81       	ldd	r24, Y+4	; 0x04
 7a6:	9d 81       	ldd	r25, Y+5	; 0x05
 7a8:	00 97       	sbiw	r24, 0x00	; 0
 7aa:	61 f0       	breq	.+24     	; 0x7c4 <DIO_enumSetPortDirection+0x5a>
 7ac:	1e c0       	rjmp	.+60     	; 0x7ea <DIO_enumSetPortDirection+0x80>
 7ae:	2c 81       	ldd	r18, Y+4	; 0x04
 7b0:	3d 81       	ldd	r19, Y+5	; 0x05
 7b2:	22 30       	cpi	r18, 0x02	; 2
 7b4:	31 05       	cpc	r19, r1
 7b6:	81 f0       	breq	.+32     	; 0x7d8 <DIO_enumSetPortDirection+0x6e>
 7b8:	8c 81       	ldd	r24, Y+4	; 0x04
 7ba:	9d 81       	ldd	r25, Y+5	; 0x05
 7bc:	83 30       	cpi	r24, 0x03	; 3
 7be:	91 05       	cpc	r25, r1
 7c0:	81 f0       	breq	.+32     	; 0x7e2 <DIO_enumSetPortDirection+0x78>
 7c2:	13 c0       	rjmp	.+38     	; 0x7ea <DIO_enumSetPortDirection+0x80>
	{
	case DIO_PORTA : DDRA=DIO_PORT_OUTPUT; break;
 7c4:	ea e3       	ldi	r30, 0x3A	; 58
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	8f ef       	ldi	r24, 0xFF	; 255
 7ca:	80 83       	st	Z, r24
 7cc:	0e c0       	rjmp	.+28     	; 0x7ea <DIO_enumSetPortDirection+0x80>
	case DIO_PORTB : DDRB=DIO_PORT_OUTPUT; break;
 7ce:	e7 e3       	ldi	r30, 0x37	; 55
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	8f ef       	ldi	r24, 0xFF	; 255
 7d4:	80 83       	st	Z, r24
 7d6:	09 c0       	rjmp	.+18     	; 0x7ea <DIO_enumSetPortDirection+0x80>
	case DIO_PORTC : DDRC=DIO_PORT_OUTPUT; break;
 7d8:	e4 e3       	ldi	r30, 0x34	; 52
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	8f ef       	ldi	r24, 0xFF	; 255
 7de:	80 83       	st	Z, r24
 7e0:	04 c0       	rjmp	.+8      	; 0x7ea <DIO_enumSetPortDirection+0x80>
	case DIO_PORTD : DDRD=DIO_PORT_OUTPUT; break;
 7e2:	e1 e3       	ldi	r30, 0x31	; 49
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	8f ef       	ldi	r24, 0xFF	; 255
 7e8:	80 83       	st	Z, r24
	} 
	
	
	LOC_enumstatus=DIO_OK;
 7ea:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 7ec:	89 81       	ldd	r24, Y+1	; 0x01
}
 7ee:	0f 90       	pop	r0
 7f0:	0f 90       	pop	r0
 7f2:	0f 90       	pop	r0
 7f4:	0f 90       	pop	r0
 7f6:	0f 90       	pop	r0
 7f8:	cf 91       	pop	r28
 7fa:	df 91       	pop	r29
 7fc:	08 95       	ret

000007fe <DIO_enumSetPortValue>:
DIO_enumstatus DIO_enumSetPortValue    (u8 copy_u8PORT,u8 copy_u8PortValue              )
{
 7fe:	df 93       	push	r29
 800:	cf 93       	push	r28
 802:	00 d0       	rcall	.+0      	; 0x804 <DIO_enumSetPortValue+0x6>
 804:	00 d0       	rcall	.+0      	; 0x806 <DIO_enumSetPortValue+0x8>
 806:	0f 92       	push	r0
 808:	cd b7       	in	r28, 0x3d	; 61
 80a:	de b7       	in	r29, 0x3e	; 62
 80c:	8a 83       	std	Y+2, r24	; 0x02
 80e:	6b 83       	std	Y+3, r22	; 0x03
	DIO_enumstatus LOC_enumstatus=DIO_NOK;
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	89 83       	std	Y+1, r24	; 0x01

    if(copy_u8PORT<=DIO_PORTD && copy_u8PortValue<=DIO_PORT_HIGH )
 814:	8a 81       	ldd	r24, Y+2	; 0x02
 816:	84 30       	cpi	r24, 0x04	; 4
 818:	98 f5       	brcc	.+102    	; 0x880 <DIO_enumSetPortValue+0x82>
	{
	 
	switch(copy_u8PORT)
 81a:	8a 81       	ldd	r24, Y+2	; 0x02
 81c:	28 2f       	mov	r18, r24
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	3d 83       	std	Y+5, r19	; 0x05
 822:	2c 83       	std	Y+4, r18	; 0x04
 824:	8c 81       	ldd	r24, Y+4	; 0x04
 826:	9d 81       	ldd	r25, Y+5	; 0x05
 828:	81 30       	cpi	r24, 0x01	; 1
 82a:	91 05       	cpc	r25, r1
 82c:	d1 f0       	breq	.+52     	; 0x862 <DIO_enumSetPortValue+0x64>
 82e:	2c 81       	ldd	r18, Y+4	; 0x04
 830:	3d 81       	ldd	r19, Y+5	; 0x05
 832:	22 30       	cpi	r18, 0x02	; 2
 834:	31 05       	cpc	r19, r1
 836:	2c f4       	brge	.+10     	; 0x842 <DIO_enumSetPortValue+0x44>
 838:	8c 81       	ldd	r24, Y+4	; 0x04
 83a:	9d 81       	ldd	r25, Y+5	; 0x05
 83c:	00 97       	sbiw	r24, 0x00	; 0
 83e:	61 f0       	breq	.+24     	; 0x858 <DIO_enumSetPortValue+0x5a>
 840:	1e c0       	rjmp	.+60     	; 0x87e <DIO_enumSetPortValue+0x80>
 842:	2c 81       	ldd	r18, Y+4	; 0x04
 844:	3d 81       	ldd	r19, Y+5	; 0x05
 846:	22 30       	cpi	r18, 0x02	; 2
 848:	31 05       	cpc	r19, r1
 84a:	81 f0       	breq	.+32     	; 0x86c <DIO_enumSetPortValue+0x6e>
 84c:	8c 81       	ldd	r24, Y+4	; 0x04
 84e:	9d 81       	ldd	r25, Y+5	; 0x05
 850:	83 30       	cpi	r24, 0x03	; 3
 852:	91 05       	cpc	r25, r1
 854:	81 f0       	breq	.+32     	; 0x876 <DIO_enumSetPortValue+0x78>
 856:	13 c0       	rjmp	.+38     	; 0x87e <DIO_enumSetPortValue+0x80>
	{
	case DIO_PORTA : PORTA=copy_u8PortValue; break;
 858:	eb e3       	ldi	r30, 0x3B	; 59
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	8b 81       	ldd	r24, Y+3	; 0x03
 85e:	80 83       	st	Z, r24
 860:	0e c0       	rjmp	.+28     	; 0x87e <DIO_enumSetPortValue+0x80>
	case DIO_PORTB : PORTB=copy_u8PortValue; break;
 862:	e8 e3       	ldi	r30, 0x38	; 56
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	8b 81       	ldd	r24, Y+3	; 0x03
 868:	80 83       	st	Z, r24
 86a:	09 c0       	rjmp	.+18     	; 0x87e <DIO_enumSetPortValue+0x80>
	case DIO_PORTC : PORTC=copy_u8PortValue; break;
 86c:	e5 e3       	ldi	r30, 0x35	; 53
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	8b 81       	ldd	r24, Y+3	; 0x03
 872:	80 83       	st	Z, r24
 874:	04 c0       	rjmp	.+8      	; 0x87e <DIO_enumSetPortValue+0x80>
	case DIO_PORTD : PORTD=copy_u8PortValue; break;
 876:	e2 e3       	ldi	r30, 0x32	; 50
 878:	f0 e0       	ldi	r31, 0x00	; 0
 87a:	8b 81       	ldd	r24, Y+3	; 0x03
 87c:	80 83       	st	Z, r24
	} 
	
	
	
	LOC_enumstatus=DIO_OK;
 87e:	19 82       	std	Y+1, r1	; 0x01
}
	return LOC_enumstatus;
 880:	89 81       	ldd	r24, Y+1	; 0x01
}
 882:	0f 90       	pop	r0
 884:	0f 90       	pop	r0
 886:	0f 90       	pop	r0
 888:	0f 90       	pop	r0
 88a:	0f 90       	pop	r0
 88c:	cf 91       	pop	r28
 88e:	df 91       	pop	r29
 890:	08 95       	ret

00000892 <DIO_enumGetPortValue>:


DIO_enumstatus   DIO_enumGetPortValue      (u8 copy_u8PORT,u8 *copy_u8Return )
{    DIO_enumstatus LOC_enumstatus=DIO_NOK;
 892:	df 93       	push	r29
 894:	cf 93       	push	r28
 896:	00 d0       	rcall	.+0      	; 0x898 <DIO_enumGetPortValue+0x6>
 898:	00 d0       	rcall	.+0      	; 0x89a <DIO_enumGetPortValue+0x8>
 89a:	00 d0       	rcall	.+0      	; 0x89c <DIO_enumGetPortValue+0xa>
 89c:	cd b7       	in	r28, 0x3d	; 61
 89e:	de b7       	in	r29, 0x3e	; 62
 8a0:	8a 83       	std	Y+2, r24	; 0x02
 8a2:	7c 83       	std	Y+4, r23	; 0x04
 8a4:	6b 83       	std	Y+3, r22	; 0x03
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	89 83       	std	Y+1, r24	; 0x01

    if(copy_u8PORT<=DIO_PORTD && copy_u8Return!=NULL )
 8aa:	8a 81       	ldd	r24, Y+2	; 0x02
 8ac:	84 30       	cpi	r24, 0x04	; 4
 8ae:	08 f0       	brcs	.+2      	; 0x8b2 <DIO_enumGetPortValue+0x20>
 8b0:	3f c0       	rjmp	.+126    	; 0x930 <DIO_enumGetPortValue+0x9e>
 8b2:	8b 81       	ldd	r24, Y+3	; 0x03
 8b4:	9c 81       	ldd	r25, Y+4	; 0x04
 8b6:	00 97       	sbiw	r24, 0x00	; 0
 8b8:	d9 f1       	breq	.+118    	; 0x930 <DIO_enumGetPortValue+0x9e>
	{
	switch(copy_u8PORT)
 8ba:	8a 81       	ldd	r24, Y+2	; 0x02
 8bc:	28 2f       	mov	r18, r24
 8be:	30 e0       	ldi	r19, 0x00	; 0
 8c0:	3e 83       	std	Y+6, r19	; 0x06
 8c2:	2d 83       	std	Y+5, r18	; 0x05
 8c4:	8d 81       	ldd	r24, Y+5	; 0x05
 8c6:	9e 81       	ldd	r25, Y+6	; 0x06
 8c8:	81 30       	cpi	r24, 0x01	; 1
 8ca:	91 05       	cpc	r25, r1
 8cc:	e1 f0       	breq	.+56     	; 0x906 <DIO_enumGetPortValue+0x74>
 8ce:	2d 81       	ldd	r18, Y+5	; 0x05
 8d0:	3e 81       	ldd	r19, Y+6	; 0x06
 8d2:	22 30       	cpi	r18, 0x02	; 2
 8d4:	31 05       	cpc	r19, r1
 8d6:	2c f4       	brge	.+10     	; 0x8e2 <DIO_enumGetPortValue+0x50>
 8d8:	8d 81       	ldd	r24, Y+5	; 0x05
 8da:	9e 81       	ldd	r25, Y+6	; 0x06
 8dc:	00 97       	sbiw	r24, 0x00	; 0
 8de:	61 f0       	breq	.+24     	; 0x8f8 <DIO_enumGetPortValue+0x66>
 8e0:	26 c0       	rjmp	.+76     	; 0x92e <DIO_enumGetPortValue+0x9c>
 8e2:	2d 81       	ldd	r18, Y+5	; 0x05
 8e4:	3e 81       	ldd	r19, Y+6	; 0x06
 8e6:	22 30       	cpi	r18, 0x02	; 2
 8e8:	31 05       	cpc	r19, r1
 8ea:	a1 f0       	breq	.+40     	; 0x914 <DIO_enumGetPortValue+0x82>
 8ec:	8d 81       	ldd	r24, Y+5	; 0x05
 8ee:	9e 81       	ldd	r25, Y+6	; 0x06
 8f0:	83 30       	cpi	r24, 0x03	; 3
 8f2:	91 05       	cpc	r25, r1
 8f4:	b1 f0       	breq	.+44     	; 0x922 <DIO_enumGetPortValue+0x90>
 8f6:	1b c0       	rjmp	.+54     	; 0x92e <DIO_enumGetPortValue+0x9c>
	{
	case DIO_PORTA : *copy_u8Return=PINA; break;
 8f8:	e9 e3       	ldi	r30, 0x39	; 57
 8fa:	f0 e0       	ldi	r31, 0x00	; 0
 8fc:	80 81       	ld	r24, Z
 8fe:	eb 81       	ldd	r30, Y+3	; 0x03
 900:	fc 81       	ldd	r31, Y+4	; 0x04
 902:	80 83       	st	Z, r24
 904:	14 c0       	rjmp	.+40     	; 0x92e <DIO_enumGetPortValue+0x9c>
	case DIO_PORTB : *copy_u8Return=PINB; break;
 906:	e6 e3       	ldi	r30, 0x36	; 54
 908:	f0 e0       	ldi	r31, 0x00	; 0
 90a:	80 81       	ld	r24, Z
 90c:	eb 81       	ldd	r30, Y+3	; 0x03
 90e:	fc 81       	ldd	r31, Y+4	; 0x04
 910:	80 83       	st	Z, r24
 912:	0d c0       	rjmp	.+26     	; 0x92e <DIO_enumGetPortValue+0x9c>
	case DIO_PORTC : *copy_u8Return=PINC; break;
 914:	e3 e3       	ldi	r30, 0x33	; 51
 916:	f0 e0       	ldi	r31, 0x00	; 0
 918:	80 81       	ld	r24, Z
 91a:	eb 81       	ldd	r30, Y+3	; 0x03
 91c:	fc 81       	ldd	r31, Y+4	; 0x04
 91e:	80 83       	st	Z, r24
 920:	06 c0       	rjmp	.+12     	; 0x92e <DIO_enumGetPortValue+0x9c>
	case DIO_PORTD : *copy_u8Return=PIND; break;
 922:	e0 e3       	ldi	r30, 0x30	; 48
 924:	f0 e0       	ldi	r31, 0x00	; 0
 926:	80 81       	ld	r24, Z
 928:	eb 81       	ldd	r30, Y+3	; 0x03
 92a:	fc 81       	ldd	r31, Y+4	; 0x04
 92c:	80 83       	st	Z, r24
	}
	LOC_enumstatus=DIO_OK;
 92e:	19 82       	std	Y+1, r1	; 0x01
	}
     return LOC_enumstatus;
 930:	89 81       	ldd	r24, Y+1	; 0x01
}
 932:	26 96       	adiw	r28, 0x06	; 6
 934:	0f b6       	in	r0, 0x3f	; 63
 936:	f8 94       	cli
 938:	de bf       	out	0x3e, r29	; 62
 93a:	0f be       	out	0x3f, r0	; 63
 93c:	cd bf       	out	0x3d, r28	; 61
 93e:	cf 91       	pop	r28
 940:	df 91       	pop	r29
 942:	08 95       	ret

00000944 <DIO_enumTogglePortValue>:
DIO_enumstatus DIO_enumTogglePortValue   (u8 copy_u8PORT )
{
 944:	df 93       	push	r29
 946:	cf 93       	push	r28
 948:	00 d0       	rcall	.+0      	; 0x94a <DIO_enumTogglePortValue+0x6>
 94a:	00 d0       	rcall	.+0      	; 0x94c <DIO_enumTogglePortValue+0x8>
 94c:	cd b7       	in	r28, 0x3d	; 61
 94e:	de b7       	in	r29, 0x3e	; 62
 950:	8a 83       	std	Y+2, r24	; 0x02
DIO_enumstatus LOC_enumstatus=DIO_NOK;
 952:	81 e0       	ldi	r24, 0x01	; 1
 954:	89 83       	std	Y+1, r24	; 0x01
    if(copy_u8PORT<=DIO_PORTD)
 956:	8a 81       	ldd	r24, Y+2	; 0x02
 958:	84 30       	cpi	r24, 0x04	; 4
 95a:	08 f0       	brcs	.+2      	; 0x95e <DIO_enumTogglePortValue+0x1a>
 95c:	3f c0       	rjmp	.+126    	; 0x9dc <DIO_enumTogglePortValue+0x98>
	{
		switch(copy_u8PORT)
 95e:	8a 81       	ldd	r24, Y+2	; 0x02
 960:	28 2f       	mov	r18, r24
 962:	30 e0       	ldi	r19, 0x00	; 0
 964:	3c 83       	std	Y+4, r19	; 0x04
 966:	2b 83       	std	Y+3, r18	; 0x03
 968:	8b 81       	ldd	r24, Y+3	; 0x03
 96a:	9c 81       	ldd	r25, Y+4	; 0x04
 96c:	81 30       	cpi	r24, 0x01	; 1
 96e:	91 05       	cpc	r25, r1
 970:	e9 f0       	breq	.+58     	; 0x9ac <DIO_enumTogglePortValue+0x68>
 972:	2b 81       	ldd	r18, Y+3	; 0x03
 974:	3c 81       	ldd	r19, Y+4	; 0x04
 976:	22 30       	cpi	r18, 0x02	; 2
 978:	31 05       	cpc	r19, r1
 97a:	2c f4       	brge	.+10     	; 0x986 <DIO_enumTogglePortValue+0x42>
 97c:	8b 81       	ldd	r24, Y+3	; 0x03
 97e:	9c 81       	ldd	r25, Y+4	; 0x04
 980:	00 97       	sbiw	r24, 0x00	; 0
 982:	61 f0       	breq	.+24     	; 0x99c <DIO_enumTogglePortValue+0x58>
 984:	2a c0       	rjmp	.+84     	; 0x9da <DIO_enumTogglePortValue+0x96>
 986:	2b 81       	ldd	r18, Y+3	; 0x03
 988:	3c 81       	ldd	r19, Y+4	; 0x04
 98a:	22 30       	cpi	r18, 0x02	; 2
 98c:	31 05       	cpc	r19, r1
 98e:	b1 f0       	breq	.+44     	; 0x9bc <DIO_enumTogglePortValue+0x78>
 990:	8b 81       	ldd	r24, Y+3	; 0x03
 992:	9c 81       	ldd	r25, Y+4	; 0x04
 994:	83 30       	cpi	r24, 0x03	; 3
 996:	91 05       	cpc	r25, r1
 998:	c9 f0       	breq	.+50     	; 0x9cc <DIO_enumTogglePortValue+0x88>
 99a:	1f c0       	rjmp	.+62     	; 0x9da <DIO_enumTogglePortValue+0x96>
		{
            case DIO_PORTA : PORTA=~PORTA; break;
 99c:	ab e3       	ldi	r26, 0x3B	; 59
 99e:	b0 e0       	ldi	r27, 0x00	; 0
 9a0:	eb e3       	ldi	r30, 0x3B	; 59
 9a2:	f0 e0       	ldi	r31, 0x00	; 0
 9a4:	80 81       	ld	r24, Z
 9a6:	80 95       	com	r24
 9a8:	8c 93       	st	X, r24
 9aa:	17 c0       	rjmp	.+46     	; 0x9da <DIO_enumTogglePortValue+0x96>
	        case DIO_PORTB : PORTB=~PORTB; break;
 9ac:	a8 e3       	ldi	r26, 0x38	; 56
 9ae:	b0 e0       	ldi	r27, 0x00	; 0
 9b0:	e8 e3       	ldi	r30, 0x38	; 56
 9b2:	f0 e0       	ldi	r31, 0x00	; 0
 9b4:	80 81       	ld	r24, Z
 9b6:	80 95       	com	r24
 9b8:	8c 93       	st	X, r24
 9ba:	0f c0       	rjmp	.+30     	; 0x9da <DIO_enumTogglePortValue+0x96>
	        case DIO_PORTC : PORTC=~PORTC; break;
 9bc:	a5 e3       	ldi	r26, 0x35	; 53
 9be:	b0 e0       	ldi	r27, 0x00	; 0
 9c0:	e5 e3       	ldi	r30, 0x35	; 53
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	80 81       	ld	r24, Z
 9c6:	80 95       	com	r24
 9c8:	8c 93       	st	X, r24
 9ca:	07 c0       	rjmp	.+14     	; 0x9da <DIO_enumTogglePortValue+0x96>
	        case DIO_PORTD : PORTD=~PORTD; break; 
 9cc:	a2 e3       	ldi	r26, 0x32	; 50
 9ce:	b0 e0       	ldi	r27, 0x00	; 0
 9d0:	e2 e3       	ldi	r30, 0x32	; 50
 9d2:	f0 e0       	ldi	r31, 0x00	; 0
 9d4:	80 81       	ld	r24, Z
 9d6:	80 95       	com	r24
 9d8:	8c 93       	st	X, r24
		}
		LOC_enumstatus=DIO_OK;
 9da:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 9dc:	89 81       	ldd	r24, Y+1	; 0x01
}
 9de:	0f 90       	pop	r0
 9e0:	0f 90       	pop	r0
 9e2:	0f 90       	pop	r0
 9e4:	0f 90       	pop	r0
 9e6:	cf 91       	pop	r28
 9e8:	df 91       	pop	r29
 9ea:	08 95       	ret

000009ec <DIO_enumWriteToRightNibble>:


DIO_enumstatus DIO_enumWriteToRightNibble(u8 copy_u8PORT,u8 copy_u8PortValue)
{
 9ec:	df 93       	push	r29
 9ee:	cf 93       	push	r28
 9f0:	00 d0       	rcall	.+0      	; 0x9f2 <DIO_enumWriteToRightNibble+0x6>
 9f2:	00 d0       	rcall	.+0      	; 0x9f4 <DIO_enumWriteToRightNibble+0x8>
 9f4:	0f 92       	push	r0
 9f6:	cd b7       	in	r28, 0x3d	; 61
 9f8:	de b7       	in	r29, 0x3e	; 62
 9fa:	8a 83       	std	Y+2, r24	; 0x02
 9fc:	6b 83       	std	Y+3, r22	; 0x03
   DIO_enumstatus LOC_enumstatus=DIO_NOK;	
 9fe:	81 e0       	ldi	r24, 0x01	; 1
 a00:	89 83       	std	Y+1, r24	; 0x01
   if(copy_u8PORT<=DIO_PORTD)
 a02:	8a 81       	ldd	r24, Y+2	; 0x02
 a04:	84 30       	cpi	r24, 0x04	; 4
 a06:	08 f0       	brcs	.+2      	; 0xa0a <DIO_enumWriteToRightNibble+0x1e>
 a08:	6b c0       	rjmp	.+214    	; 0xae0 <DIO_enumWriteToRightNibble+0xf4>
	{
		switch(copy_u8PORT)
 a0a:	8a 81       	ldd	r24, Y+2	; 0x02
 a0c:	28 2f       	mov	r18, r24
 a0e:	30 e0       	ldi	r19, 0x00	; 0
 a10:	3d 83       	std	Y+5, r19	; 0x05
 a12:	2c 83       	std	Y+4, r18	; 0x04
 a14:	8c 81       	ldd	r24, Y+4	; 0x04
 a16:	9d 81       	ldd	r25, Y+5	; 0x05
 a18:	81 30       	cpi	r24, 0x01	; 1
 a1a:	91 05       	cpc	r25, r1
 a1c:	41 f1       	breq	.+80     	; 0xa6e <DIO_enumWriteToRightNibble+0x82>
 a1e:	2c 81       	ldd	r18, Y+4	; 0x04
 a20:	3d 81       	ldd	r19, Y+5	; 0x05
 a22:	22 30       	cpi	r18, 0x02	; 2
 a24:	31 05       	cpc	r19, r1
 a26:	2c f4       	brge	.+10     	; 0xa32 <DIO_enumWriteToRightNibble+0x46>
 a28:	8c 81       	ldd	r24, Y+4	; 0x04
 a2a:	9d 81       	ldd	r25, Y+5	; 0x05
 a2c:	00 97       	sbiw	r24, 0x00	; 0
 a2e:	61 f0       	breq	.+24     	; 0xa48 <DIO_enumWriteToRightNibble+0x5c>
 a30:	56 c0       	rjmp	.+172    	; 0xade <DIO_enumWriteToRightNibble+0xf2>
 a32:	2c 81       	ldd	r18, Y+4	; 0x04
 a34:	3d 81       	ldd	r19, Y+5	; 0x05
 a36:	22 30       	cpi	r18, 0x02	; 2
 a38:	31 05       	cpc	r19, r1
 a3a:	61 f1       	breq	.+88     	; 0xa94 <DIO_enumWriteToRightNibble+0xa8>
 a3c:	8c 81       	ldd	r24, Y+4	; 0x04
 a3e:	9d 81       	ldd	r25, Y+5	; 0x05
 a40:	83 30       	cpi	r24, 0x03	; 3
 a42:	91 05       	cpc	r25, r1
 a44:	d1 f1       	breq	.+116    	; 0xaba <DIO_enumWriteToRightNibble+0xce>
 a46:	4b c0       	rjmp	.+150    	; 0xade <DIO_enumWriteToRightNibble+0xf2>
		{
            case DIO_PORTA : PORTA&=0xf0;copy_u8PortValue&=0x0f;PORTA|=copy_u8PortValue; break;
 a48:	ab e3       	ldi	r26, 0x3B	; 59
 a4a:	b0 e0       	ldi	r27, 0x00	; 0
 a4c:	eb e3       	ldi	r30, 0x3B	; 59
 a4e:	f0 e0       	ldi	r31, 0x00	; 0
 a50:	80 81       	ld	r24, Z
 a52:	80 7f       	andi	r24, 0xF0	; 240
 a54:	8c 93       	st	X, r24
 a56:	8b 81       	ldd	r24, Y+3	; 0x03
 a58:	8f 70       	andi	r24, 0x0F	; 15
 a5a:	8b 83       	std	Y+3, r24	; 0x03
 a5c:	ab e3       	ldi	r26, 0x3B	; 59
 a5e:	b0 e0       	ldi	r27, 0x00	; 0
 a60:	eb e3       	ldi	r30, 0x3B	; 59
 a62:	f0 e0       	ldi	r31, 0x00	; 0
 a64:	90 81       	ld	r25, Z
 a66:	8b 81       	ldd	r24, Y+3	; 0x03
 a68:	89 2b       	or	r24, r25
 a6a:	8c 93       	st	X, r24
 a6c:	38 c0       	rjmp	.+112    	; 0xade <DIO_enumWriteToRightNibble+0xf2>
	        case DIO_PORTB : PORTB&=0xf0;copy_u8PortValue&=0x0f;PORTB|=copy_u8PortValue; break;
 a6e:	a8 e3       	ldi	r26, 0x38	; 56
 a70:	b0 e0       	ldi	r27, 0x00	; 0
 a72:	e8 e3       	ldi	r30, 0x38	; 56
 a74:	f0 e0       	ldi	r31, 0x00	; 0
 a76:	80 81       	ld	r24, Z
 a78:	80 7f       	andi	r24, 0xF0	; 240
 a7a:	8c 93       	st	X, r24
 a7c:	8b 81       	ldd	r24, Y+3	; 0x03
 a7e:	8f 70       	andi	r24, 0x0F	; 15
 a80:	8b 83       	std	Y+3, r24	; 0x03
 a82:	a8 e3       	ldi	r26, 0x38	; 56
 a84:	b0 e0       	ldi	r27, 0x00	; 0
 a86:	e8 e3       	ldi	r30, 0x38	; 56
 a88:	f0 e0       	ldi	r31, 0x00	; 0
 a8a:	90 81       	ld	r25, Z
 a8c:	8b 81       	ldd	r24, Y+3	; 0x03
 a8e:	89 2b       	or	r24, r25
 a90:	8c 93       	st	X, r24
 a92:	25 c0       	rjmp	.+74     	; 0xade <DIO_enumWriteToRightNibble+0xf2>
	        case DIO_PORTC : PORTC&=0xf0;copy_u8PortValue&=0x0f;PORTC|=copy_u8PortValue; break;
 a94:	a5 e3       	ldi	r26, 0x35	; 53
 a96:	b0 e0       	ldi	r27, 0x00	; 0
 a98:	e5 e3       	ldi	r30, 0x35	; 53
 a9a:	f0 e0       	ldi	r31, 0x00	; 0
 a9c:	80 81       	ld	r24, Z
 a9e:	80 7f       	andi	r24, 0xF0	; 240
 aa0:	8c 93       	st	X, r24
 aa2:	8b 81       	ldd	r24, Y+3	; 0x03
 aa4:	8f 70       	andi	r24, 0x0F	; 15
 aa6:	8b 83       	std	Y+3, r24	; 0x03
 aa8:	a5 e3       	ldi	r26, 0x35	; 53
 aaa:	b0 e0       	ldi	r27, 0x00	; 0
 aac:	e5 e3       	ldi	r30, 0x35	; 53
 aae:	f0 e0       	ldi	r31, 0x00	; 0
 ab0:	90 81       	ld	r25, Z
 ab2:	8b 81       	ldd	r24, Y+3	; 0x03
 ab4:	89 2b       	or	r24, r25
 ab6:	8c 93       	st	X, r24
 ab8:	12 c0       	rjmp	.+36     	; 0xade <DIO_enumWriteToRightNibble+0xf2>
	        case DIO_PORTD : PORTD&=0xf0;copy_u8PortValue&=0x0f;PORTD|=copy_u8PortValue; break; 
 aba:	a2 e3       	ldi	r26, 0x32	; 50
 abc:	b0 e0       	ldi	r27, 0x00	; 0
 abe:	e2 e3       	ldi	r30, 0x32	; 50
 ac0:	f0 e0       	ldi	r31, 0x00	; 0
 ac2:	80 81       	ld	r24, Z
 ac4:	80 7f       	andi	r24, 0xF0	; 240
 ac6:	8c 93       	st	X, r24
 ac8:	8b 81       	ldd	r24, Y+3	; 0x03
 aca:	8f 70       	andi	r24, 0x0F	; 15
 acc:	8b 83       	std	Y+3, r24	; 0x03
 ace:	a2 e3       	ldi	r26, 0x32	; 50
 ad0:	b0 e0       	ldi	r27, 0x00	; 0
 ad2:	e2 e3       	ldi	r30, 0x32	; 50
 ad4:	f0 e0       	ldi	r31, 0x00	; 0
 ad6:	90 81       	ld	r25, Z
 ad8:	8b 81       	ldd	r24, Y+3	; 0x03
 ada:	89 2b       	or	r24, r25
 adc:	8c 93       	st	X, r24
		}
		LOC_enumstatus=DIO_OK;
 ade:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 ae0:	89 81       	ldd	r24, Y+1	; 0x01
}
 ae2:	0f 90       	pop	r0
 ae4:	0f 90       	pop	r0
 ae6:	0f 90       	pop	r0
 ae8:	0f 90       	pop	r0
 aea:	0f 90       	pop	r0
 aec:	cf 91       	pop	r28
 aee:	df 91       	pop	r29
 af0:	08 95       	ret

00000af2 <DIO_enumWriteToLeftNibble>:
DIO_enumstatus DIO_enumWriteToLeftNibble(u8 copy_u8PORT,u8 copy_u8PortValue)
{
 af2:	df 93       	push	r29
 af4:	cf 93       	push	r28
 af6:	00 d0       	rcall	.+0      	; 0xaf8 <DIO_enumWriteToLeftNibble+0x6>
 af8:	00 d0       	rcall	.+0      	; 0xafa <DIO_enumWriteToLeftNibble+0x8>
 afa:	0f 92       	push	r0
 afc:	cd b7       	in	r28, 0x3d	; 61
 afe:	de b7       	in	r29, 0x3e	; 62
 b00:	8a 83       	std	Y+2, r24	; 0x02
 b02:	6b 83       	std	Y+3, r22	; 0x03
	copy_u8PortValue<<=4;;
 b04:	8b 81       	ldd	r24, Y+3	; 0x03
 b06:	82 95       	swap	r24
 b08:	80 7f       	andi	r24, 0xF0	; 240
 b0a:	8b 83       	std	Y+3, r24	; 0x03
   DIO_enumstatus LOC_enumstatus=DIO_NOK;	
 b0c:	81 e0       	ldi	r24, 0x01	; 1
 b0e:	89 83       	std	Y+1, r24	; 0x01
   if(copy_u8PORT<=DIO_PORTD)
 b10:	8a 81       	ldd	r24, Y+2	; 0x02
 b12:	84 30       	cpi	r24, 0x04	; 4
 b14:	08 f0       	brcs	.+2      	; 0xb18 <DIO_enumWriteToLeftNibble+0x26>
 b16:	5f c0       	rjmp	.+190    	; 0xbd6 <DIO_enumWriteToLeftNibble+0xe4>
	{
		switch(copy_u8PORT)
 b18:	8a 81       	ldd	r24, Y+2	; 0x02
 b1a:	28 2f       	mov	r18, r24
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	3d 83       	std	Y+5, r19	; 0x05
 b20:	2c 83       	std	Y+4, r18	; 0x04
 b22:	8c 81       	ldd	r24, Y+4	; 0x04
 b24:	9d 81       	ldd	r25, Y+5	; 0x05
 b26:	81 30       	cpi	r24, 0x01	; 1
 b28:	91 05       	cpc	r25, r1
 b2a:	29 f1       	breq	.+74     	; 0xb76 <DIO_enumWriteToLeftNibble+0x84>
 b2c:	2c 81       	ldd	r18, Y+4	; 0x04
 b2e:	3d 81       	ldd	r19, Y+5	; 0x05
 b30:	22 30       	cpi	r18, 0x02	; 2
 b32:	31 05       	cpc	r19, r1
 b34:	2c f4       	brge	.+10     	; 0xb40 <DIO_enumWriteToLeftNibble+0x4e>
 b36:	8c 81       	ldd	r24, Y+4	; 0x04
 b38:	9d 81       	ldd	r25, Y+5	; 0x05
 b3a:	00 97       	sbiw	r24, 0x00	; 0
 b3c:	61 f0       	breq	.+24     	; 0xb56 <DIO_enumWriteToLeftNibble+0x64>
 b3e:	4a c0       	rjmp	.+148    	; 0xbd4 <DIO_enumWriteToLeftNibble+0xe2>
 b40:	2c 81       	ldd	r18, Y+4	; 0x04
 b42:	3d 81       	ldd	r19, Y+5	; 0x05
 b44:	22 30       	cpi	r18, 0x02	; 2
 b46:	31 05       	cpc	r19, r1
 b48:	31 f1       	breq	.+76     	; 0xb96 <DIO_enumWriteToLeftNibble+0xa4>
 b4a:	8c 81       	ldd	r24, Y+4	; 0x04
 b4c:	9d 81       	ldd	r25, Y+5	; 0x05
 b4e:	83 30       	cpi	r24, 0x03	; 3
 b50:	91 05       	cpc	r25, r1
 b52:	89 f1       	breq	.+98     	; 0xbb6 <DIO_enumWriteToLeftNibble+0xc4>
 b54:	3f c0       	rjmp	.+126    	; 0xbd4 <DIO_enumWriteToLeftNibble+0xe2>
		{
            case DIO_PORTA : PORTA&=0x0f;PORTA|=copy_u8PortValue; break;
 b56:	ab e3       	ldi	r26, 0x3B	; 59
 b58:	b0 e0       	ldi	r27, 0x00	; 0
 b5a:	eb e3       	ldi	r30, 0x3B	; 59
 b5c:	f0 e0       	ldi	r31, 0x00	; 0
 b5e:	80 81       	ld	r24, Z
 b60:	8f 70       	andi	r24, 0x0F	; 15
 b62:	8c 93       	st	X, r24
 b64:	ab e3       	ldi	r26, 0x3B	; 59
 b66:	b0 e0       	ldi	r27, 0x00	; 0
 b68:	eb e3       	ldi	r30, 0x3B	; 59
 b6a:	f0 e0       	ldi	r31, 0x00	; 0
 b6c:	90 81       	ld	r25, Z
 b6e:	8b 81       	ldd	r24, Y+3	; 0x03
 b70:	89 2b       	or	r24, r25
 b72:	8c 93       	st	X, r24
 b74:	2f c0       	rjmp	.+94     	; 0xbd4 <DIO_enumWriteToLeftNibble+0xe2>
	        case DIO_PORTB : PORTB&=0x0f;PORTB|=copy_u8PortValue; break;
 b76:	a8 e3       	ldi	r26, 0x38	; 56
 b78:	b0 e0       	ldi	r27, 0x00	; 0
 b7a:	e8 e3       	ldi	r30, 0x38	; 56
 b7c:	f0 e0       	ldi	r31, 0x00	; 0
 b7e:	80 81       	ld	r24, Z
 b80:	8f 70       	andi	r24, 0x0F	; 15
 b82:	8c 93       	st	X, r24
 b84:	a8 e3       	ldi	r26, 0x38	; 56
 b86:	b0 e0       	ldi	r27, 0x00	; 0
 b88:	e8 e3       	ldi	r30, 0x38	; 56
 b8a:	f0 e0       	ldi	r31, 0x00	; 0
 b8c:	90 81       	ld	r25, Z
 b8e:	8b 81       	ldd	r24, Y+3	; 0x03
 b90:	89 2b       	or	r24, r25
 b92:	8c 93       	st	X, r24
 b94:	1f c0       	rjmp	.+62     	; 0xbd4 <DIO_enumWriteToLeftNibble+0xe2>
	        case DIO_PORTC : PORTC&=0x0f;PORTC|=copy_u8PortValue; break;
 b96:	a5 e3       	ldi	r26, 0x35	; 53
 b98:	b0 e0       	ldi	r27, 0x00	; 0
 b9a:	e5 e3       	ldi	r30, 0x35	; 53
 b9c:	f0 e0       	ldi	r31, 0x00	; 0
 b9e:	80 81       	ld	r24, Z
 ba0:	8f 70       	andi	r24, 0x0F	; 15
 ba2:	8c 93       	st	X, r24
 ba4:	a5 e3       	ldi	r26, 0x35	; 53
 ba6:	b0 e0       	ldi	r27, 0x00	; 0
 ba8:	e5 e3       	ldi	r30, 0x35	; 53
 baa:	f0 e0       	ldi	r31, 0x00	; 0
 bac:	90 81       	ld	r25, Z
 bae:	8b 81       	ldd	r24, Y+3	; 0x03
 bb0:	89 2b       	or	r24, r25
 bb2:	8c 93       	st	X, r24
 bb4:	0f c0       	rjmp	.+30     	; 0xbd4 <DIO_enumWriteToLeftNibble+0xe2>
	        case DIO_PORTD : PORTD&=0x0f;PORTD|=copy_u8PortValue; break; 
 bb6:	a2 e3       	ldi	r26, 0x32	; 50
 bb8:	b0 e0       	ldi	r27, 0x00	; 0
 bba:	e2 e3       	ldi	r30, 0x32	; 50
 bbc:	f0 e0       	ldi	r31, 0x00	; 0
 bbe:	80 81       	ld	r24, Z
 bc0:	8f 70       	andi	r24, 0x0F	; 15
 bc2:	8c 93       	st	X, r24
 bc4:	a2 e3       	ldi	r26, 0x32	; 50
 bc6:	b0 e0       	ldi	r27, 0x00	; 0
 bc8:	e2 e3       	ldi	r30, 0x32	; 50
 bca:	f0 e0       	ldi	r31, 0x00	; 0
 bcc:	90 81       	ld	r25, Z
 bce:	8b 81       	ldd	r24, Y+3	; 0x03
 bd0:	89 2b       	or	r24, r25
 bd2:	8c 93       	st	X, r24
		}
		LOC_enumstatus=DIO_OK;
 bd4:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumstatus;
 bd6:	89 81       	ldd	r24, Y+1	; 0x01
 bd8:	0f 90       	pop	r0
 bda:	0f 90       	pop	r0
 bdc:	0f 90       	pop	r0
 bde:	0f 90       	pop	r0
 be0:	0f 90       	pop	r0
 be2:	cf 91       	pop	r28
 be4:	df 91       	pop	r29
 be6:	08 95       	ret

00000be8 <LED_voidInit>:
#include "DIO_interface.h"

#include "LED_interface.h"

void LED_voidInit(LED_Type LED_configuration)
{
 be8:	df 93       	push	r29
 bea:	cf 93       	push	r28
 bec:	00 d0       	rcall	.+0      	; 0xbee <LED_voidInit+0x6>
 bee:	0f 92       	push	r0
 bf0:	cd b7       	in	r28, 0x3d	; 61
 bf2:	de b7       	in	r29, 0x3e	; 62
 bf4:	69 83       	std	Y+1, r22	; 0x01
 bf6:	7a 83       	std	Y+2, r23	; 0x02
 bf8:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(LED_configuration.port,LED_configuration.pin,DIO_PIN_OUTPUT);
 bfa:	89 81       	ldd	r24, Y+1	; 0x01
 bfc:	9a 81       	ldd	r25, Y+2	; 0x02
 bfe:	69 2f       	mov	r22, r25
 c00:	41 e0       	ldi	r20, 0x01	; 1
 c02:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enumSetPinDirection>
}
 c06:	0f 90       	pop	r0
 c08:	0f 90       	pop	r0
 c0a:	0f 90       	pop	r0
 c0c:	cf 91       	pop	r28
 c0e:	df 91       	pop	r29
 c10:	08 95       	ret

00000c12 <LED_voidLedOn>:

void LED_voidLedOn(LED_Type LED_configuration)
{
 c12:	df 93       	push	r29
 c14:	cf 93       	push	r28
 c16:	00 d0       	rcall	.+0      	; 0xc18 <LED_voidLedOn+0x6>
 c18:	0f 92       	push	r0
 c1a:	cd b7       	in	r28, 0x3d	; 61
 c1c:	de b7       	in	r29, 0x3e	; 62
 c1e:	69 83       	std	Y+1, r22	; 0x01
 c20:	7a 83       	std	Y+2, r23	; 0x02
 c22:	8b 83       	std	Y+3, r24	; 0x03
	if(LED_configuration.activestate==ACTIVE_LOW)
 c24:	8b 81       	ldd	r24, Y+3	; 0x03
 c26:	88 23       	and	r24, r24
 c28:	39 f4       	brne	.+14     	; 0xc38 <LED_voidLedOn+0x26>
		DIO_enumSetPinValue(LED_configuration.port,LED_configuration.pin,DIO_PIN_LOW);
 c2a:	89 81       	ldd	r24, Y+1	; 0x01
 c2c:	9a 81       	ldd	r25, Y+2	; 0x02
 c2e:	69 2f       	mov	r22, r25
 c30:	40 e0       	ldi	r20, 0x00	; 0
 c32:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_enumSetPinValue>
 c36:	09 c0       	rjmp	.+18     	; 0xc4a <LED_voidLedOn+0x38>
	
	else if(LED_configuration.activestate==ACTIVE_HIGH)
 c38:	8b 81       	ldd	r24, Y+3	; 0x03
 c3a:	81 30       	cpi	r24, 0x01	; 1
 c3c:	31 f4       	brne	.+12     	; 0xc4a <LED_voidLedOn+0x38>
		DIO_enumSetPinValue(LED_configuration.port,LED_configuration.pin,DIO_PIN_HIGH);
 c3e:	89 81       	ldd	r24, Y+1	; 0x01
 c40:	9a 81       	ldd	r25, Y+2	; 0x02
 c42:	69 2f       	mov	r22, r25
 c44:	41 e0       	ldi	r20, 0x01	; 1
 c46:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_enumSetPinValue>
}
 c4a:	0f 90       	pop	r0
 c4c:	0f 90       	pop	r0
 c4e:	0f 90       	pop	r0
 c50:	cf 91       	pop	r28
 c52:	df 91       	pop	r29
 c54:	08 95       	ret

00000c56 <LED_voidLedOf>:

void LED_voidLedOf(LED_Type LED_configuration)
{
 c56:	df 93       	push	r29
 c58:	cf 93       	push	r28
 c5a:	00 d0       	rcall	.+0      	; 0xc5c <LED_voidLedOf+0x6>
 c5c:	0f 92       	push	r0
 c5e:	cd b7       	in	r28, 0x3d	; 61
 c60:	de b7       	in	r29, 0x3e	; 62
 c62:	69 83       	std	Y+1, r22	; 0x01
 c64:	7a 83       	std	Y+2, r23	; 0x02
 c66:	8b 83       	std	Y+3, r24	; 0x03
	if(LED_configuration.activestate==ACTIVE_LOW)
 c68:	8b 81       	ldd	r24, Y+3	; 0x03
 c6a:	88 23       	and	r24, r24
 c6c:	39 f4       	brne	.+14     	; 0xc7c <LED_voidLedOf+0x26>
		DIO_enumSetPinValue(LED_configuration.port,LED_configuration.pin,DIO_PIN_HIGH);
 c6e:	89 81       	ldd	r24, Y+1	; 0x01
 c70:	9a 81       	ldd	r25, Y+2	; 0x02
 c72:	69 2f       	mov	r22, r25
 c74:	41 e0       	ldi	r20, 0x01	; 1
 c76:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_enumSetPinValue>
 c7a:	09 c0       	rjmp	.+18     	; 0xc8e <LED_voidLedOf+0x38>
	
	else if(LED_configuration.activestate==ACTIVE_HIGH)
 c7c:	8b 81       	ldd	r24, Y+3	; 0x03
 c7e:	81 30       	cpi	r24, 0x01	; 1
 c80:	31 f4       	brne	.+12     	; 0xc8e <LED_voidLedOf+0x38>
		DIO_enumSetPinValue(LED_configuration.port,LED_configuration.pin,DIO_PIN_LOW);
 c82:	89 81       	ldd	r24, Y+1	; 0x01
 c84:	9a 81       	ldd	r25, Y+2	; 0x02
 c86:	69 2f       	mov	r22, r25
 c88:	40 e0       	ldi	r20, 0x00	; 0
 c8a:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_enumSetPinValue>
}
 c8e:	0f 90       	pop	r0
 c90:	0f 90       	pop	r0
 c92:	0f 90       	pop	r0
 c94:	cf 91       	pop	r28
 c96:	df 91       	pop	r29
 c98:	08 95       	ret

00000c9a <LED_voidToggle>:

void LED_voidToggle(LED_Type LED_configuration)
{
 c9a:	df 93       	push	r29
 c9c:	cf 93       	push	r28
 c9e:	00 d0       	rcall	.+0      	; 0xca0 <LED_voidToggle+0x6>
 ca0:	0f 92       	push	r0
 ca2:	cd b7       	in	r28, 0x3d	; 61
 ca4:	de b7       	in	r29, 0x3e	; 62
 ca6:	69 83       	std	Y+1, r22	; 0x01
 ca8:	7a 83       	std	Y+2, r23	; 0x02
 caa:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePin(LED_configuration.port , LED_configuration.pin);
 cac:	89 81       	ldd	r24, Y+1	; 0x01
 cae:	9a 81       	ldd	r25, Y+2	; 0x02
 cb0:	69 2f       	mov	r22, r25
 cb2:	0e 94 2a 03 	call	0x654	; 0x654 <DIO_enumTogglePin>
}
 cb6:	0f 90       	pop	r0
 cb8:	0f 90       	pop	r0
 cba:	0f 90       	pop	r0
 cbc:	cf 91       	pop	r28
 cbe:	df 91       	pop	r29
 cc0:	08 95       	ret

00000cc2 <SW_voidInit>:

#include "DIO_interface.h"
#include "SW_interface.h"

void SW_voidInit(SW_t copy_structconfig)
{
 cc2:	df 93       	push	r29
 cc4:	cf 93       	push	r28
 cc6:	00 d0       	rcall	.+0      	; 0xcc8 <SW_voidInit+0x6>
 cc8:	0f 92       	push	r0
 cca:	cd b7       	in	r28, 0x3d	; 61
 ccc:	de b7       	in	r29, 0x3e	; 62
 cce:	69 83       	std	Y+1, r22	; 0x01
 cd0:	7a 83       	std	Y+2, r23	; 0x02
 cd2:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(copy_structconfig.port,copy_structconfig.pin,DIO_PIN_INPUT);
 cd4:	89 81       	ldd	r24, Y+1	; 0x01
 cd6:	9a 81       	ldd	r25, Y+2	; 0x02
 cd8:	69 2f       	mov	r22, r25
 cda:	40 e0       	ldi	r20, 0x00	; 0
 cdc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enumSetPinDirection>
	
	if(copy_structconfig.pullstate==SW_INT_PULL_UP)
 ce0:	8b 81       	ldd	r24, Y+3	; 0x03
 ce2:	82 30       	cpi	r24, 0x02	; 2
 ce4:	31 f4       	brne	.+12     	; 0xcf2 <SW_voidInit+0x30>
	{
		DIO_enumSetPinValue(copy_structconfig.port,copy_structconfig.pin,DIO_PIN_HIGH);
 ce6:	89 81       	ldd	r24, Y+1	; 0x01
 ce8:	9a 81       	ldd	r25, Y+2	; 0x02
 cea:	69 2f       	mov	r22, r25
 cec:	41 e0       	ldi	r20, 0x01	; 1
 cee:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_enumSetPinValue>
	}
}
 cf2:	0f 90       	pop	r0
 cf4:	0f 90       	pop	r0
 cf6:	0f 90       	pop	r0
 cf8:	cf 91       	pop	r28
 cfa:	df 91       	pop	r29
 cfc:	08 95       	ret

00000cfe <SW_u8ReadSwitch>:

u8   SW_u8ReadSwitch(SW_t copy_structconfig)
{ 
 cfe:	df 93       	push	r29
 d00:	cf 93       	push	r28
 d02:	00 d0       	rcall	.+0      	; 0xd04 <SW_u8ReadSwitch+0x6>
 d04:	00 d0       	rcall	.+0      	; 0xd06 <SW_u8ReadSwitch+0x8>
 d06:	0f 92       	push	r0
 d08:	cd b7       	in	r28, 0x3d	; 61
 d0a:	de b7       	in	r29, 0x3e	; 62
 d0c:	6b 83       	std	Y+3, r22	; 0x03
 d0e:	7c 83       	std	Y+4, r23	; 0x04
 d10:	8d 83       	std	Y+5, r24	; 0x05
     u8   local_u8PinValue=0;
 d12:	1a 82       	std	Y+2, r1	; 0x02
     u8 local_u8PinState=0;
 d14:	19 82       	std	Y+1, r1	; 0x01
	if(copy_structconfig.pullstate==SW_EXT_PULL_DOWN)
 d16:	8d 81       	ldd	r24, Y+5	; 0x05
 d18:	88 23       	and	r24, r24
 d1a:	a1 f4       	brne	.+40     	; 0xd44 <SW_u8ReadSwitch+0x46>
	{
		DIO_enumGetPinValue(copy_structconfig.port,copy_structconfig.pin,&local_u8PinValue);
 d1c:	8b 81       	ldd	r24, Y+3	; 0x03
 d1e:	9c 81       	ldd	r25, Y+4	; 0x04
 d20:	9e 01       	movw	r18, r28
 d22:	2e 5f       	subi	r18, 0xFE	; 254
 d24:	3f 4f       	sbci	r19, 0xFF	; 255
 d26:	69 2f       	mov	r22, r25
 d28:	a9 01       	movw	r20, r18
 d2a:	0e 94 61 02 	call	0x4c2	; 0x4c2 <DIO_enumGetPinValue>
		
		if(local_u8PinValue==1)
 d2e:	8a 81       	ldd	r24, Y+2	; 0x02
 d30:	81 30       	cpi	r24, 0x01	; 1
 d32:	19 f4       	brne	.+6      	; 0xd3a <SW_u8ReadSwitch+0x3c>
			local_u8PinState=SW_PRESED;
 d34:	81 e0       	ldi	r24, 0x01	; 1
 d36:	89 83       	std	Y+1, r24	; 0x01
 d38:	1e c0       	rjmp	.+60     	; 0xd76 <SW_u8ReadSwitch+0x78>
		else if(local_u8PinValue==0)
 d3a:	8a 81       	ldd	r24, Y+2	; 0x02
 d3c:	88 23       	and	r24, r24
 d3e:	d9 f4       	brne	.+54     	; 0xd76 <SW_u8ReadSwitch+0x78>
			local_u8PinState=SW_NOTPRESED;
 d40:	19 82       	std	Y+1, r1	; 0x01
 d42:	19 c0       	rjmp	.+50     	; 0xd76 <SW_u8ReadSwitch+0x78>
	}
	else if(copy_structconfig.pullstate==SW_INT_PULL_UP||copy_structconfig.pullstate==SW_EXT_PULL_UP)
 d44:	8d 81       	ldd	r24, Y+5	; 0x05
 d46:	82 30       	cpi	r24, 0x02	; 2
 d48:	19 f0       	breq	.+6      	; 0xd50 <SW_u8ReadSwitch+0x52>
 d4a:	8d 81       	ldd	r24, Y+5	; 0x05
 d4c:	81 30       	cpi	r24, 0x01	; 1
 d4e:	99 f4       	brne	.+38     	; 0xd76 <SW_u8ReadSwitch+0x78>
	{
		DIO_enumGetPinValue(copy_structconfig.port,copy_structconfig.pin,&local_u8PinValue);
 d50:	8b 81       	ldd	r24, Y+3	; 0x03
 d52:	9c 81       	ldd	r25, Y+4	; 0x04
 d54:	9e 01       	movw	r18, r28
 d56:	2e 5f       	subi	r18, 0xFE	; 254
 d58:	3f 4f       	sbci	r19, 0xFF	; 255
 d5a:	69 2f       	mov	r22, r25
 d5c:	a9 01       	movw	r20, r18
 d5e:	0e 94 61 02 	call	0x4c2	; 0x4c2 <DIO_enumGetPinValue>
		
		if(local_u8PinValue==0)
 d62:	8a 81       	ldd	r24, Y+2	; 0x02
 d64:	88 23       	and	r24, r24
 d66:	19 f4       	brne	.+6      	; 0xd6e <SW_u8ReadSwitch+0x70>
			local_u8PinState=SW_PRESED;
 d68:	81 e0       	ldi	r24, 0x01	; 1
 d6a:	89 83       	std	Y+1, r24	; 0x01
 d6c:	04 c0       	rjmp	.+8      	; 0xd76 <SW_u8ReadSwitch+0x78>
		else if(local_u8PinValue==1)
 d6e:	8a 81       	ldd	r24, Y+2	; 0x02
 d70:	81 30       	cpi	r24, 0x01	; 1
 d72:	09 f4       	brne	.+2      	; 0xd76 <SW_u8ReadSwitch+0x78>
			local_u8PinState=SW_NOTPRESED;
 d74:	19 82       	std	Y+1, r1	; 0x01
	} 
	return local_u8PinState;
 d76:	89 81       	ldd	r24, Y+1	; 0x01
}
 d78:	0f 90       	pop	r0
 d7a:	0f 90       	pop	r0
 d7c:	0f 90       	pop	r0
 d7e:	0f 90       	pop	r0
 d80:	0f 90       	pop	r0
 d82:	cf 91       	pop	r28
 d84:	df 91       	pop	r29
 d86:	08 95       	ret

00000d88 <main>:
#include "LED_interface.h"

#include "SW_interface.h"

 void main()
 {  LED_Type led1={LED_PORTA,LED_PIN0,ACTIVE_HIGH};
 d88:	df 93       	push	r29
 d8a:	cf 93       	push	r28
 d8c:	cd b7       	in	r28, 0x3d	; 61
 d8e:	de b7       	in	r29, 0x3e	; 62
 d90:	60 97       	sbiw	r28, 0x10	; 16
 d92:	0f b6       	in	r0, 0x3f	; 63
 d94:	f8 94       	cli
 d96:	de bf       	out	0x3e, r29	; 62
 d98:	0f be       	out	0x3f, r0	; 63
 d9a:	cd bf       	out	0x3d, r28	; 61
 d9c:	ce 01       	movw	r24, r28
 d9e:	01 96       	adiw	r24, 0x01	; 1
 da0:	98 87       	std	Y+8, r25	; 0x08
 da2:	8f 83       	std	Y+7, r24	; 0x07
 da4:	e3 e6       	ldi	r30, 0x63	; 99
 da6:	f0 e0       	ldi	r31, 0x00	; 0
 da8:	fa 87       	std	Y+10, r31	; 0x0a
 daa:	e9 87       	std	Y+9, r30	; 0x09
 dac:	f3 e0       	ldi	r31, 0x03	; 3
 dae:	fb 87       	std	Y+11, r31	; 0x0b
 db0:	e9 85       	ldd	r30, Y+9	; 0x09
 db2:	fa 85       	ldd	r31, Y+10	; 0x0a
 db4:	00 80       	ld	r0, Z
 db6:	89 85       	ldd	r24, Y+9	; 0x09
 db8:	9a 85       	ldd	r25, Y+10	; 0x0a
 dba:	01 96       	adiw	r24, 0x01	; 1
 dbc:	9a 87       	std	Y+10, r25	; 0x0a
 dbe:	89 87       	std	Y+9, r24	; 0x09
 dc0:	ef 81       	ldd	r30, Y+7	; 0x07
 dc2:	f8 85       	ldd	r31, Y+8	; 0x08
 dc4:	00 82       	st	Z, r0
 dc6:	8f 81       	ldd	r24, Y+7	; 0x07
 dc8:	98 85       	ldd	r25, Y+8	; 0x08
 dca:	01 96       	adiw	r24, 0x01	; 1
 dcc:	98 87       	std	Y+8, r25	; 0x08
 dce:	8f 83       	std	Y+7, r24	; 0x07
 dd0:	9b 85       	ldd	r25, Y+11	; 0x0b
 dd2:	91 50       	subi	r25, 0x01	; 1
 dd4:	9b 87       	std	Y+11, r25	; 0x0b
 dd6:	eb 85       	ldd	r30, Y+11	; 0x0b
 dd8:	ee 23       	and	r30, r30
 dda:	51 f7       	brne	.-44     	; 0xdb0 <main+0x28>
 SW_t switch1 ={DIO_PORTC,DIO_PIN0,SW_INT_PULL_UP};
 ddc:	ce 01       	movw	r24, r28
 dde:	04 96       	adiw	r24, 0x04	; 4
 de0:	9d 87       	std	Y+13, r25	; 0x0d
 de2:	8c 87       	std	Y+12, r24	; 0x0c
 de4:	e0 e6       	ldi	r30, 0x60	; 96
 de6:	f0 e0       	ldi	r31, 0x00	; 0
 de8:	ff 87       	std	Y+15, r31	; 0x0f
 dea:	ee 87       	std	Y+14, r30	; 0x0e
 dec:	f3 e0       	ldi	r31, 0x03	; 3
 dee:	f8 8b       	std	Y+16, r31	; 0x10
 df0:	ee 85       	ldd	r30, Y+14	; 0x0e
 df2:	ff 85       	ldd	r31, Y+15	; 0x0f
 df4:	00 80       	ld	r0, Z
 df6:	8e 85       	ldd	r24, Y+14	; 0x0e
 df8:	9f 85       	ldd	r25, Y+15	; 0x0f
 dfa:	01 96       	adiw	r24, 0x01	; 1
 dfc:	9f 87       	std	Y+15, r25	; 0x0f
 dfe:	8e 87       	std	Y+14, r24	; 0x0e
 e00:	ec 85       	ldd	r30, Y+12	; 0x0c
 e02:	fd 85       	ldd	r31, Y+13	; 0x0d
 e04:	00 82       	st	Z, r0
 e06:	8c 85       	ldd	r24, Y+12	; 0x0c
 e08:	9d 85       	ldd	r25, Y+13	; 0x0d
 e0a:	01 96       	adiw	r24, 0x01	; 1
 e0c:	9d 87       	std	Y+13, r25	; 0x0d
 e0e:	8c 87       	std	Y+12, r24	; 0x0c
 e10:	98 89       	ldd	r25, Y+16	; 0x10
 e12:	91 50       	subi	r25, 0x01	; 1
 e14:	98 8b       	std	Y+16, r25	; 0x10
 e16:	e8 89       	ldd	r30, Y+16	; 0x10
 e18:	ee 23       	and	r30, r30
 e1a:	51 f7       	brne	.-44     	; 0xdf0 <main+0x68>
 LED_voidInit(led1);
 e1c:	69 81       	ldd	r22, Y+1	; 0x01
 e1e:	7a 81       	ldd	r23, Y+2	; 0x02
 e20:	8b 81       	ldd	r24, Y+3	; 0x03
 e22:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <LED_voidInit>
 SW_voidInit(switch1);
 e26:	6c 81       	ldd	r22, Y+4	; 0x04
 e28:	7d 81       	ldd	r23, Y+5	; 0x05
 e2a:	8e 81       	ldd	r24, Y+6	; 0x06
 e2c:	0e 94 61 06 	call	0xcc2	; 0xcc2 <SW_voidInit>

 while(1)
 {
	 if(SW_u8ReadSwitch(switch1)==SW_PRESED)
 e30:	6c 81       	ldd	r22, Y+4	; 0x04
 e32:	7d 81       	ldd	r23, Y+5	; 0x05
 e34:	8e 81       	ldd	r24, Y+6	; 0x06
 e36:	0e 94 7f 06 	call	0xcfe	; 0xcfe <SW_u8ReadSwitch>
 e3a:	81 30       	cpi	r24, 0x01	; 1
 e3c:	31 f4       	brne	.+12     	; 0xe4a <main+0xc2>
	 {
		 LED_voidLedOn(led1);
 e3e:	69 81       	ldd	r22, Y+1	; 0x01
 e40:	7a 81       	ldd	r23, Y+2	; 0x02
 e42:	8b 81       	ldd	r24, Y+3	; 0x03
 e44:	0e 94 09 06 	call	0xc12	; 0xc12 <LED_voidLedOn>
 e48:	f3 cf       	rjmp	.-26     	; 0xe30 <main+0xa8>
	 }
	 else
	 {
		 LED_voidLedOf(led1);
 e4a:	69 81       	ldd	r22, Y+1	; 0x01
 e4c:	7a 81       	ldd	r23, Y+2	; 0x02
 e4e:	8b 81       	ldd	r24, Y+3	; 0x03
 e50:	0e 94 2b 06 	call	0xc56	; 0xc56 <LED_voidLedOf>
 e54:	ed cf       	rjmp	.-38     	; 0xe30 <main+0xa8>

00000e56 <_exit>:
 e56:	f8 94       	cli

00000e58 <__stop_program>:
 e58:	ff cf       	rjmp	.-2      	; 0xe58 <__stop_program>
